var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AccessTokenResponse.html",[0,0.655,1,1.828]],["body/interfaces/AccessTokenResponse.html",[0,1.142,1,2.919,2,1.724,3,0.344,4,0.31,5,0.31,6,3.171,7,0.414,8,0.985,9,4.537,10,1.159,11,0.489,12,0.021,13,0.527,14,3.221,15,2.907,16,0.47,17,2.498,18,2.421,19,3.361,20,2.687,21,3.361,22,3.361,23,1.469,24,2.333,25,0.017,26,0.017]],["title/modules/AppModule.html",[27,1.277,28,2.485]],["body/modules/AppModule.html",[3,0.308,4,0.278,5,0.278,12,0.021,13,0.77,16,0.308,25,0.015,26,0.015,27,1.9,28,4.94,29,1.839,30,3.131,31,3.53,32,3.53,33,3.406,34,3.192,35,4.243,36,4.243,37,3.695,38,2.837,39,2.601,40,4.131,41,3.695,42,4.109,43,4.109,44,2.911,45,1.306,46,2.088,47,3.133,48,4.131,49,4.131,50,2.837,51,3.133,52,0.086]],["title/guards/AuthGuard.html",[53,2.744,54,2.744]],["body/guards/AuthGuard.html",[3,0.232,4,0.21,5,0.21,7,0.28,8,0.532,10,0.829,11,0.597,12,0.021,13,0.68,16,0.232,25,0.013,26,0.013,45,0.986,52,0.065,54,3.368,55,3.118,56,2.365,57,3.603,58,3.368,59,3.923,60,1.977,61,3.256,62,5.637,63,4.441,64,1.963,65,3.118,66,5.291,67,3.448,68,1.389,69,3.118,70,2.302,71,0.882,72,1.826,73,4.441,74,4.275,75,3.118,76,3.118,77,1.862,78,2.244,79,4.441,80,3.118,81,4.275,82,3.549,83,3.923,84,1.963,85,2.584,86,1.687,87,1.687,88,4.441,89,2.365,90,1.477,91,2.365,92,2.664,93,2.141,94,2.141,95,2.614,96,3.118,97,2.141,98,3.28,99,2.365,100,3.118,101,3.118,102,3.05,103,3.368,104,5.637,105,3.368,106,3.118,107,3.118,108,3.118,109,2.365,110,2.104,111,3.118,112,2.365,113,2.104,114,1.101,115,2.141,116,3.118,117,3.118,118,3.118,119,3.118,120,2.403,121,3.118,122,3.118,123,2.365]],["title/classes/Authorizer.html",[52,0.075,124,2.278]],["body/classes/Authorizer.html",[3,0.274,4,0.247,5,0.247,7,0.33,8,0.849,11,0.527,12,0.021,13,0.645,14,1.742,16,0.371,25,0.014,26,0.014,45,1.163,50,2.526,52,0.076,60,2.217,64,2.315,68,1.626,70,1.637,71,0.627,72,1.298,74,3.777,77,2.088,82,3.982,83,4.283,84,2.315,91,2.789,93,4.344,95,2.854,98,3.286,99,2.789,102,3.42,103,3.777,105,3.777,112,2.789,113,2.675,124,3.135,125,1.228,126,2.789,127,4.981,128,6.053,129,6.053,130,3.678,131,3.678,132,3.678,133,3.678,134,4.591,135,3.678,136,3.678,137,3.678,138,4.981,139,3.678,140,6.053,141,4.981,142,2.789,143,2.315,144,3.142,145,3.142,146,3.142,147,2.789,148,3.142,149,3.142]],["title/modules/BookConfigModule.html",[27,1.277,33,1.828]],["body/modules/BookConfigModule.html",[3,0.291,4,0.263,5,0.263,12,0.021,13,0.758,16,0.462,25,0.015,26,0.015,27,2.279,29,1.739,33,2.622,34,1.851,44,3.356,45,1.236,52,0.128,67,3.356,86,2.114,87,2.114,114,1.38,150,2.684,151,3.019,152,3.019,153,3.019,154,3.019,155,2.684,156,3.563,157,3.563,158,3.563,159,2.114,160,3.563,161,3.019,162,3.019,163,3.019,164,2.684,165,2.684,166,3.999,167,3.666,168,3.61,169,1.851,170,2.684,171,2.684,172,2.684,173,2.684,174,2.684,175,1.851]],["title/controllers/BookController.html",[42,2.485,176,2.278]],["body/controllers/BookController.html",[3,0.148,4,0.134,5,0.134,7,0.179,10,0.72,11,0.709,12,0.021,13,0.513,16,0.148,22,2.613,23,1.443,25,0.009,26,0.009,41,1.368,42,2.175,45,0.63,46,1.007,52,0.041,60,1.409,61,4.272,68,1.469,70,2.434,71,1.077,72,1.931,77,2.293,78,3.235,97,1.368,113,2.127,114,1.585,124,4.497,143,3.284,176,1.993,177,1.702,178,2.401,179,2.401,180,2.989,181,2.989,182,2.989,183,2.989,184,2.989,185,1.992,186,4.154,187,1.998,188,2.591,189,1.992,190,1.992,191,1.992,192,1.998,193,1.992,194,1.992,195,1.992,196,2.434,197,1.992,198,1.992,199,1.992,200,3.851,201,2.293,202,2.705,203,2.269,204,2.948,205,2.705,206,1.677,207,2.688,208,2.127,209,2.705,210,2.269,211,2.429,212,1.992,213,1.992,214,1.992,215,1.992,216,3.405,217,1.992,218,1.992,219,1.998,220,1.992,221,1.992,222,1.992,223,1.992,224,1.992,225,1.6,226,0.835,227,4.457,228,1.702,229,1.992,230,3.898,231,1.702,232,4.673,233,1.702,234,0.887,235,1.254,236,1.702,237,1.992,238,1.702,239,1.992,240,1.992,241,3.941,242,2.989,243,1.992,244,1.992,245,1.992,246,1.992,247,1.992,248,2.705,249,1.992,250,3.836,251,1.992,252,1.992,253,1.992,254,1.992,255,1.992,256,1.992,257,1.992,258,1.992]],["title/modules/BookElasticModule.html",[27,1.277,169,1.714]],["body/modules/BookElasticModule.html",[3,0.291,4,0.263,5,0.263,12,0.021,13,0.758,16,0.462,25,0.015,26,0.015,27,2.279,29,1.739,33,1.975,34,1.851,44,3.356,45,1.236,52,0.128,67,3.356,86,2.114,87,2.114,114,1.38,150,2.684,151,3.019,152,3.019,153,3.019,154,3.019,155,2.684,156,3.563,157,3.563,158,3.563,159,2.114,160,3.563,161,3.019,162,3.019,163,3.019,164,2.684,165,2.684,166,3.999,167,3.666,168,3.61,169,2.457,170,2.684,171,2.684,172,2.684,173,2.684,174,2.684,175,1.851]],["title/classes/BookException.html",[52,0.075,259,2.105]],["body/classes/BookException.html",[3,0.331,4,0.298,5,0.298,7,0.398,11,0.47,12,0.021,13,0.507,16,0.331,25,0.016,26,0.016,45,1.403,52,0.092,57,2.582,60,2.508,64,2.794,68,1.513,70,1.975,71,0.757,72,1.567,77,1.86,83,4.939,84,4.1,95,2.243,97,3.048,103,3.366,105,3.366,110,2.932,113,2.102,125,1.482,259,3.279,260,3.792,261,5.635,262,4.273,263,6.513,264,4.438,265,6.191,266,4.438,267,5.635,268,4.438,269,4.438,270,4.438,271,4.438,272,4.438]],["title/classes/BookExceptionFilter.html",[52,0.075,273,2.744]],["body/classes/BookExceptionFilter.html",[3,0.307,4,0.277,5,0.277,7,0.37,8,0.916,11,0.436,12,0.021,13,0.682,16,0.307,25,0.015,26,0.015,45,1.302,52,0.085,57,3.477,59,4.802,60,2.39,68,1.442,70,1.833,71,0.702,72,1.454,77,1.726,89,3.124,94,3.688,95,2.714,98,3.125,113,1.951,115,4.104,125,1.376,147,4.073,259,3.684,273,4.073,274,3.519,275,5.976,276,2.829,277,2.593,278,5.371,279,4.119,280,5.371,281,3.477,282,6.333,283,4.119,284,5.371,285,5.976,286,4.119,287,4.119,288,4.119,289,4.119,290,4.119,291,4.119,292,4.119,293,4.119]],["title/modules/BookJWTTokenModule.html",[27,1.277,34,1.714]],["body/modules/BookJWTTokenModule.html",[3,0.291,4,0.263,5,0.263,12,0.021,13,0.758,16,0.462,25,0.015,26,0.015,27,2.279,29,1.739,33,1.975,34,2.457,44,3.356,45,1.236,52,0.128,67,3.356,86,2.114,87,2.114,114,1.38,150,2.684,151,3.019,152,3.019,153,3.019,154,3.019,155,2.684,156,3.563,157,3.563,158,3.563,159,2.114,160,3.563,161,3.019,162,3.019,163,3.019,164,2.684,165,2.684,166,3.999,167,3.666,168,3.61,169,1.851,170,2.684,171,2.684,172,2.684,173,2.684,174,2.684,175,1.851]],["title/modules/BookModule.html",[27,1.277,35,2.278]],["body/modules/BookModule.html",[3,0.317,4,0.286,5,0.286,12,0.021,13,0.733,16,0.409,25,0.016,26,0.016,27,1.938,29,1.896,30,3.193,35,4.455,37,3.769,38,2.925,39,2.681,44,2.969,45,1.347,47,3.23,51,3.23,52,0.088,168,3.193,169,3.219,175,3.219,225,3.576,294,3.639,295,3.639,296,3.639,297,4.26,298,3.639,299,3.769,300,4.26,301,3.639,302,3.639]],["title/modules/BookRedisModule.html",[27,1.277,175,1.714]],["body/modules/BookRedisModule.html",[3,0.291,4,0.263,5,0.263,12,0.021,13,0.758,16,0.462,25,0.015,26,0.015,27,2.279,29,1.739,33,1.975,34,1.851,44,3.356,45,1.236,52,0.128,67,3.356,86,2.114,87,2.114,114,1.38,150,2.684,151,3.019,152,3.019,153,3.019,154,3.019,155,2.684,156,3.563,157,3.563,158,3.563,159,2.114,160,3.563,161,3.019,162,3.019,163,3.019,164,2.684,165,2.684,166,3.999,167,3.666,168,3.61,169,1.851,170,2.684,171,2.684,172,2.684,173,2.684,174,2.684,175,2.457]],["title/classes/BookService.html",[52,0.075,225,1.828]],["body/classes/BookService.html",[3,0.217,4,0.195,5,0.195,7,0.261,10,1.114,11,0.677,12,0.021,13,0.482,16,0.217,25,0.012,26,0.012,52,0.06,60,1.879,68,1.717,70,2.845,71,1.09,72,2.257,77,2.679,78,3.533,125,0.971,178,3.203,179,3.203,180,3.203,181,3.203,182,3.203,183,3.203,184,3.203,186,4.102,187,2.429,192,2.429,196,2.777,200,4.102,201,2.775,219,2.429,225,2.134,226,1.218,303,2.484,304,6.182,305,3.203,306,3.608,307,2.907,308,2.746,309,3.608,310,2.907,311,3.608,312,2.907,313,3.608,314,2.907,315,3.608,316,2.907,317,3.608,318,2.907,319,3.608,320,2.907,321,3.608,322,2.907,323,2.484,324,2.484]],["title/injectables/BookServiceImpl.html",[85,2.105,299,2.485]],["body/injectables/BookServiceImpl.html",[3,0.08,4,0.126,5,0.072,7,0.48,10,0.92,11,0.553,12,0.022,13,0.596,16,0.08,17,0.579,18,1.914,25,0.005,26,0.005,45,0.339,52,0.022,57,2.528,58,1.426,60,0.837,61,3.825,64,1.184,68,1.325,70,2.195,71,0.867,72,1.741,77,1.996,78,2.758,84,0.674,85,1.094,94,0.735,95,1.528,98,3.859,102,2.605,109,1.907,110,1.796,113,1.937,115,1.292,159,0.579,167,0.674,178,1.426,179,1.426,180,1.426,181,1.426,182,1.426,183,1.426,184,1.426,186,3.287,187,1.346,192,1.346,196,1.82,200,3.706,201,2.132,203,1.917,206,1.416,208,0.507,210,1.528,216,0.812,219,1.346,225,0.95,226,0.449,242,4.465,259,1.094,262,2.294,298,0.915,299,1.292,305,1.426,306,1.607,308,2.473,309,1.607,311,1.607,313,1.607,315,0.915,317,1.607,319,1.607,321,1.607,323,0.915,324,0.915,325,0.812,326,0.915,327,2.515,328,2.515,329,0.915,330,2.584,331,3.712,332,1.071,333,1.426,334,1.071,335,1.071,336,3.024,337,1.071,338,1.881,339,1.071,340,3.024,341,1.071,342,1.071,343,1.071,344,1.071,345,1.071,346,1.071,347,1.071,348,1.071,349,0.812,350,0.915,351,0.915,352,0.541,353,1.528,354,0.541,355,0.541,356,1.071,357,0.744,358,0.423,359,1.196,360,0.623,361,2.584,362,0.812,363,0.915,364,1.071,365,0.915,366,1.426,367,1.071,368,1.071,369,1.881,370,3.494,371,2.515,372,3.024,373,3.024,374,3.494,375,1.071,376,1.071,377,1.071,378,1.071,379,4.462,380,3.712,381,3.024,382,2.515,383,0.915,384,0.915,385,0.915,386,1.426,387,1.607,388,2.148,389,2.148,390,0.915,391,0.915,392,1.071,393,1.607,394,1.071,395,1.071,396,1.071,397,1.071,398,1.071,399,1.071,400,1.071,401,1.071,402,2.515,403,2.515,404,3.024,405,2.515,406,2.584,407,2.515,408,1.881,409,3.024,410,1.881,411,4.09,412,1.071,413,1.071,414,3.024,415,3.024,416,3.024,417,1.881,418,4.345,419,1.76,420,3.024,421,1.76,422,2.515,423,2.515,424,3.024,425,2.809,426,3.024,427,1.881,428,1.071,429,1.821,430,2.515,431,1.071,432,1.071,433,1.881,434,1.071,435,0.915,436,1.071,437,0.915,438,1.071,439,1.071,440,1.071,441,1.426,442,3.024,443,3.024,444,2.515,445,1.607,446,1.071,447,1.071,448,0.915,449,1.881,450,1.071,451,0.915,452,1.463,453,1.071,454,0.788,455,1.071,456,0.915,457,1.881,458,1.071,459,1.071,460,1.071,461,1.071,462,1.071,463,1.071,464,1.071,465,1.881,466,1.071,467,1.071]],["title/classes/CheckoutDto.html",[52,0.075,187,1.61]],["body/classes/CheckoutDto.html",[3,0.213,4,0.192,5,0.192,7,0.257,8,0.711,10,0.964,11,0.636,12,0.021,13,0.563,16,0.429,23,1.579,25,0.012,26,0.012,46,1.445,52,0.124,68,0.768,71,1.173,114,2.359,125,0.955,187,1.857,188,1.354,192,1.272,196,1.272,201,1.198,203,2.108,204,3.123,206,1.558,207,3.38,208,1.976,210,2.108,211,1.547,219,1.272,234,1.272,357,2.141,358,1.947,359,2.277,429,1.748,454,1.748,468,1.663,469,3.625,470,1.547,471,2.93,472,2.859,473,2.859,474,3.691,475,1.8,476,2.626,477,2.626,478,1.547,479,3.615,480,3.101,481,3.101,482,2.626,483,3.443,484,1.8,485,1.8,486,1.445,487,1.649,488,1.649,489,1.8,490,1.8,491,1.8,492,1.8,493,1.8,494,1.8,495,1.8,496,1.857,497,1.663,498,1.8,499,1.857,500,1.8]],["title/classes/ContentDto.html",[52,0.075,192,1.61]],["body/classes/ContentDto.html",[3,0.189,4,0.171,5,0.171,7,0.228,8,0.652,10,1.009,11,0.678,12,0.021,13,0.525,16,0.409,23,1.564,25,0.011,26,0.011,46,1.284,52,0.119,68,1.472,71,1.175,114,2.298,125,0.849,187,1.131,188,2.597,192,1.702,196,1.131,201,1.065,203,1.932,204,3.19,206,1.428,207,3.406,208,1.811,210,1.932,211,1.375,219,1.131,234,1.131,357,1.817,358,1.817,359,2.487,429,1.602,454,2.298,468,1.479,469,2.407,470,2.966,471,2.766,474,3.609,475,1.6,476,2.407,477,2.407,478,1.375,479,3.522,480,2.893,481,2.893,482,2.407,483,3.327,484,1.6,485,1.6,486,1.284,487,2.167,488,2.167,489,2.407,490,1.6,491,1.6,492,1.6,493,1.6,494,1.6,495,1.6,496,1.702,497,1.479,498,1.6,499,1.702,500,1.6,501,3.485,502,2.541,503,2.541,504,2.541,505,2.541,506,2.541,507,2.541,508,2.541]],["title/interfaces/ContentResponse.html",[0,0.655,226,1.516]],["body/interfaces/ContentResponse.html",[0,1.137,2,1.506,3,0.301,4,0.271,5,0.271,7,0.362,8,0.903,10,1.094,11,0.665,12,0.021,13,0.461,16,0.486,18,1.691,23,1.823,25,0.015,26,0.015,52,0.083,71,0.688,110,2.975,206,2.346,226,2.221,308,1.911,352,3.174,353,2.039,354,2.039,355,2.039,357,2.339,358,2.095,359,2.339,360,2.347,419,3.655,421,3.655,429,2.221,452,2.347,454,1.691,487,1.595,488,1.595,496,1.796,499,1.796,509,2.347]],["title/classes/GetContentQuery.html",[52,0.075,201,1.516]],["body/classes/GetContentQuery.html",[3,0.201,4,0.181,5,0.181,7,0.241,8,0.68,10,0.976,11,0.698,12,0.021,13,0.543,16,0.419,23,1.625,25,0.011,26,0.011,46,1.36,52,0.122,68,1.277,71,1.16,72,1.409,114,2.295,125,0.899,187,1.198,188,2.252,192,1.198,196,1.198,201,1.672,203,2.838,204,3.026,206,2.097,207,3.379,208,2.252,210,2.838,211,2.159,219,1.198,234,1.198,357,1.88,358,1.88,359,2.221,429,1.672,454,1.672,468,1.566,469,2.512,470,2.573,471,2.573,474,3.65,475,1.694,476,2.512,477,2.512,478,1.456,479,3.568,480,2.993,481,2.993,482,2.512,483,3.384,484,1.694,485,1.694,486,1.36,487,1.577,488,1.577,489,1.694,490,1.694,491,1.694,492,1.694,493,1.694,494,1.694,495,1.694,496,1.776,497,1.566,498,1.694,499,1.776,500,1.694,510,3.99,511,2.691,512,2.691,513,2.691,514,2.691]],["title/interfaces/IAppConfig.html",[0,0.655,515,1.958]],["body/interfaces/IAppConfig.html",[0,1.148,2,1.543,3,0.308,4,0.278,5,0.278,7,0.371,8,0.917,10,1.185,11,0.713,12,0.021,16,0.473,23,1.612,25,0.015,26,0.015,71,1.081,90,1.957,120,2.235,281,2.404,515,2.911,516,2.601,517,3.991,518,3.991,519,4.138,520,3.991,521,3.689,522,2.404,523,2.235,524,2.601,525,2.235,526,2.601]],["title/interfaces/IContent.html",[0,0.655,352,1.828]],["body/interfaces/IContent.html",[0,1.117,2,1.439,3,0.287,4,0.259,5,0.259,7,0.346,8,0.876,10,1.159,11,0.7,12,0.021,13,0.44,16,0.479,18,2.586,23,1.743,25,0.015,26,0.015,52,0.08,71,1.052,72,1.814,110,1.825,206,1.439,226,1.615,308,1.825,352,2.922,353,1.947,354,1.947,355,1.947,357,2.286,358,2.032,359,2.71,360,2.242,419,2.242,421,2.242,429,2.154,452,2.242,454,2.586,487,2.439,488,2.439,496,1.715,499,1.715,509,2.242]],["title/interfaces/IElasticConfig.html",[0,0.655,525,1.958]],["body/interfaces/IElasticConfig.html",[0,1.196,2,1.724,3,0.344,4,0.31,5,0.31,7,0.414,8,0.985,10,1.171,11,0.489,12,0.021,16,0.492,23,1.469,25,0.017,26,0.017,71,0.787,90,2.187,120,2.498,281,2.687,515,2.498,516,2.907,517,2.907,518,2.907,519,3.637,520,2.907,521,2.687,522,2.687,523,2.498,524,2.907,525,3.126,526,4.159]],["title/interfaces/IJWTConfig.html",[0,0.655,90,1.714]],["body/interfaces/IJWTConfig.html",[0,1.186,2,1.685,3,0.336,4,0.303,5,0.303,7,0.405,8,0.971,10,1.177,11,0.602,12,0.021,16,0.488,23,1.448,25,0.016,26,0.016,71,0.769,90,2.696,120,3.545,281,2.625,515,2.441,516,2.84,517,2.84,518,2.84,519,3.584,520,2.84,521,2.625,522,3.812,523,2.441,524,2.84,525,2.441,526,2.84]],["title/interfaces/IMember.html",[0,0.655,17,1.958]],["body/interfaces/IMember.html",[0,1.08,1,2.075,2,1.533,3,0.306,4,0.276,5,0.276,6,2.82,7,0.369,8,0.914,9,2.82,10,1.172,11,0.712,12,0.021,13,0.469,14,3.359,15,2.585,16,0.445,17,2.9,18,2.75,19,3.818,20,3.68,21,3.818,22,3.818,23,1.608,24,2.075,25,0.015,26,0.015,72,1.892]],["title/interfaces/IRedisConfig.html",[0,0.655,523,1.958]],["body/interfaces/IRedisConfig.html",[0,1.176,2,1.647,3,0.329,4,0.296,5,0.296,7,0.396,8,0.957,10,1.174,11,0.653,12,0.021,16,0.484,23,1.652,25,0.016,26,0.016,71,0.752,90,2.089,120,2.386,281,3.78,515,2.386,516,2.776,517,2.776,518,2.776,519,4.223,520,2.776,521,2.566,522,2.566,523,3.036,524,4.09,525,2.386,526,2.776]],["title/classes/ISelectContent.html",[52,0.075,353,1.828]],["body/classes/ISelectContent.html",[0,1.165,3,0.32,4,0.289,5,0.289,7,0.386,8,0.941,10,1.125,11,0.455,12,0.021,13,0.491,16,0.496,18,1.802,23,1.732,25,0.016,26,0.016,52,0.089,68,1.155,71,0.733,110,2.036,125,1.436,206,1.605,226,1.802,308,2.036,352,2.79,353,2.79,354,2.173,355,2.173,357,2.411,358,2.183,359,2.411,360,2.502,419,2.502,421,2.502,429,2.698,452,2.502,454,1.802,487,1.7,488,1.7,496,1.914,499,1.914,509,2.502,527,4.3]],["title/interfaces/ISettingPoint.html",[0,0.655,354,1.828]],["body/interfaces/ISettingPoint.html",[0,1.156,2,1.571,3,0.314,4,0.283,5,0.283,7,0.378,8,0.928,10,1.105,11,0.576,12,0.021,13,0.481,16,0.493,18,1.763,23,1.776,25,0.016,26,0.016,52,0.087,71,0.717,110,1.993,206,1.571,226,1.763,308,1.993,352,2.752,353,2.126,354,2.752,355,2.126,357,2.387,358,2.524,359,2.387,360,2.448,419,2.448,421,2.448,429,2.282,452,2.448,454,1.763,487,1.663,488,1.663,496,2.841,499,2.841,509,2.448]],["title/interfaces/ITokenPayload.html",[0,0.655,82,2.278]],["body/interfaces/ITokenPayload.html",[0,0.906,2,1.869,3,0.373,4,0.336,5,0.336,7,0.449,8,1.035,10,1.048,11,0.642,12,0.021,13,0.572,14,3.422,16,0.373,18,2.848,25,0.017,26,0.017,50,3.437,82,3.821,528,4.275]],["title/interfaces/ITransaction.html",[0,0.655,355,1.828]],["body/interfaces/ITransaction.html",[0,1.137,2,1.506,3,0.301,4,0.271,5,0.271,7,0.362,8,0.903,10,1.142,11,0.665,12,0.021,13,0.461,16,0.486,18,1.691,23,1.761,25,0.015,26,0.015,52,0.083,71,0.688,110,1.911,206,1.506,226,1.691,308,2.975,352,2.677,353,2.039,354,2.039,355,2.677,357,2.738,358,2.095,359,2.339,360,2.347,419,2.347,421,2.347,429,2.734,452,3.655,454,1.691,487,1.595,488,1.595,496,1.796,499,1.796,509,2.347]],["title/classes/LoginDto.html",[52,0.075,529,1.958]],["body/classes/LoginDto.html",[3,0.27,4,0.243,5,0.243,7,0.325,8,0.84,10,1.065,11,0.521,12,0.021,13,0.64,14,2.98,15,2.279,16,0.367,19,3.864,20,3.864,21,2.867,25,0.014,26,0.014,52,0.116,68,1.323,71,1.107,114,2.291,125,1.209,142,2.745,188,2.334,204,3.201,207,3.282,234,1.611,470,2.666,471,1.958,474,3.593,478,1.958,479,3.593,483,3.512,486,1.829,501,3.737,529,2.666,530,2.745,531,4.786,532,3.62,533,3.62,534,1.958,535,4.786,536,3.092]],["title/controllers/MemberController.html",[43,2.485,176,2.278]],["body/controllers/MemberController.html",[1,1.439,3,0.212,4,0.191,5,0.191,7,0.256,10,0.667,11,0.697,12,0.021,13,0.657,16,0.212,23,1.374,24,1.439,25,0.012,26,0.012,41,1.955,43,2.856,45,0.9,46,1.439,50,1.955,52,0.059,57,1.656,60,1.851,61,4.25,68,1.451,70,2.405,71,1.057,72,1.908,77,2.265,78,3.212,97,1.955,113,2.56,114,1.468,124,4.203,143,2.618,176,2.618,186,3.402,188,2.56,200,3.779,201,2.265,202,2.432,203,2.102,204,2.843,205,2.432,206,1.553,207,2.56,208,1.97,209,2.432,210,2.102,211,2.25,225,2.102,226,1.193,227,2.432,228,2.432,230,3.374,231,2.432,232,4.617,233,2.432,234,1.267,235,1.792,238,2.432,248,2.432,250,3.553,305,3.727,366,2.159,529,2.924,534,2.924,537,2.432,538,3.154,539,3.154,540,2.847,541,2.847,542,2.847,543,2.432,544,4.159,545,2.847,546,2.847,547,2.847,548,2.847,549,2.432,550,4.159,551,2.847,552,2.25,553,2.847,554,2.847,555,2.847,556,2.847,557,2.847,558,2.847,559,2.847,560,2.847,561,2.847,562,2.847]],["title/modules/MemberModule.html",[27,1.277,36,2.278]],["body/modules/MemberModule.html",[3,0.309,4,0.279,5,0.279,12,0.021,13,0.725,16,0.402,25,0.015,26,0.015,27,1.903,29,1.844,30,3.137,34,3.195,36,4.503,37,3.702,38,2.846,39,2.608,44,2.917,45,1.31,47,3.143,51,3.143,52,0.086,168,3.137,169,3.195,175,3.195,301,3.54,302,3.54,552,3.809,563,3.54,564,4.144,565,3.54,566,4.144,567,3.54,568,3.702,569,4.144]],["title/interfaces/MemberResponse.html",[0,0.655,24,1.828]],["body/interfaces/MemberResponse.html",[0,1.091,1,2.12,2,1.566,3,0.313,4,0.282,5,0.282,6,2.88,7,0.376,8,0.926,9,2.88,10,1.167,11,0.699,12,0.021,13,0.479,14,3.371,15,2.64,16,0.449,17,2.269,18,2.769,19,3.843,20,2.44,21,3.843,22,3.843,23,1.621,24,2.746,25,0.016,26,0.016,72,1.918]],["title/classes/MemberService.html",[52,0.075,552,1.958]],["body/classes/MemberService.html",[1,2.113,3,0.312,4,0.281,5,0.281,7,0.375,10,0.965,11,0.637,12,0.021,13,0.619,16,0.312,24,2.113,25,0.016,26,0.016,52,0.087,60,2.414,68,1.616,70,2.679,71,1.026,72,2.125,77,2.523,78,3.417,125,1.397,186,3.414,304,6.077,308,1.98,529,3.446,534,3.446,538,4.113,539,4.113,543,4.633,549,4.633,552,2.934,570,3.573,571,4.182,572,4.633,573,4.182,574,4.182,575,3.573,576,3.573]],["title/injectables/MemberServiceImpl.html",[85,2.105,568,2.485]],["body/injectables/MemberServiceImpl.html",[1,1.911,3,0.14,4,0.126,5,0.126,7,0.456,8,0.514,9,1.286,10,0.606,11,0.503,12,0.022,13,0.699,14,2.053,16,0.14,17,2.345,18,2.127,19,3.229,20,2.522,21,2.2,22,1.754,24,0.946,25,0.009,26,0.009,45,0.592,52,0.039,57,3.333,58,3.849,59,3.287,60,1.341,61,3.606,64,1.897,66,3.703,67,2.345,68,1.363,70,2.114,71,0.81,72,1.677,77,1.817,78,2.565,81,2.286,84,1.179,85,1.754,86,1.013,87,1.013,90,0.887,91,1.42,93,1.286,94,1.286,95,2.565,98,3.62,102,3.664,109,3.287,110,2.527,113,2.053,115,2.597,120,1.631,123,1.42,159,1.013,200,2.381,242,3.849,259,1.754,262,3.849,276,1.286,277,1.179,308,1.427,325,1.42,329,1.6,330,3.703,333,2.286,349,1.42,350,1.6,351,1.6,361,2.575,362,3.603,370,3.703,374,3.231,379,4.336,380,3.231,383,1.6,385,1.6,386,1.42,387,1.6,388,2.575,389,2.575,390,3.231,391,3.231,393,4.059,406,1.6,437,1.6,441,1.42,445,2.575,448,4.336,451,2.575,456,3.231,522,1.754,529,2.345,534,2.345,538,2.868,539,2.868,552,1.631,567,1.6,568,2.07,572,2.575,575,1.6,576,1.6,577,1.42,578,3.014,579,3.231,580,3.231,581,3.014,582,3.014,583,1.873,584,1.873,585,1.873,586,1.873,587,1.873,588,1.873,589,3.014,590,2.575,591,2.286,592,1.6,593,1.873,594,1.873,595,3.014,596,3.014,597,1.873,598,3.014,599,1.873,600,3.782,601,1.873,602,3.014,603,1.873,604,1.873,605,1.873,606,1.873,607,1.873,608,1.873]],["title/classes/Path.html",[52,0.075,235,2.278]],["body/classes/Path.html",[3,0.318,4,0.287,5,0.287,7,0.383,8,0.938,10,1.029,11,0.68,12,0.021,16,0.318,25,0.016,26,0.016,52,0.088,68,1.724,81,4.612,125,1.427,235,3.462,276,4.41,277,4.042,333,5.039,425,3.777,579,4.698,609,3.65,610,7.229,611,5.676,612,5.196,613,4.273,614,4.273,615,4.698,616,4.273,617,4.273]],["title/classes/RegisterDto.html",[52,0.075,534,1.958]],["body/classes/RegisterDto.html",[3,0.248,4,0.224,5,0.224,7,0.299,8,0.793,10,1.062,11,0.614,12,0.021,13,0.612,14,3.187,15,2.096,16,0.347,19,3.778,20,3.778,21,3.553,25,0.013,26,0.013,52,0.111,68,1.559,71,1.079,114,2.292,125,1.112,134,2.525,142,2.525,188,2.749,204,3.229,207,3.263,234,1.482,470,3.14,471,2.517,474,3.513,478,1.802,479,3.513,483,3.423,486,1.683,501,4.066,529,1.802,530,2.525,531,4.58,534,2.517,535,5.405,536,2.845,618,3.33,619,3.33,620,3.33,621,3.33,622,3.33]],["title/classes/SelectContentDto.html",[52,0.075,219,1.61]],["body/classes/SelectContentDto.html",[3,0.212,4,0.191,5,0.191,7,0.256,8,0.709,10,0.994,11,0.656,12,0.021,13,0.561,16,0.428,23,1.576,25,0.012,26,0.012,46,1.439,52,0.124,68,0.764,71,1.172,114,2.357,125,0.951,134,2.159,187,1.267,188,1.348,192,1.267,196,1.267,201,1.193,203,2.102,204,3.12,206,1.553,207,3.366,208,1.97,210,2.102,211,1.54,219,1.851,234,1.267,357,1.943,358,1.943,359,2.273,429,2.409,454,1.743,468,1.656,469,2.618,470,1.54,471,2.659,474,3.689,475,1.792,476,2.618,477,2.618,478,1.54,479,3.612,480,3.093,481,3.093,482,2.618,483,3.439,484,1.792,485,1.792,486,1.439,487,1.644,488,1.644,489,1.792,490,1.792,491,1.792,492,1.792,493,2.618,494,1.792,495,1.792,496,1.851,497,1.656,498,1.792,499,1.851,500,1.792,623,2.847,624,2.847,625,2.847]],["title/classes/SettingPointDto.html",[52,0.075,196,1.61]],["body/classes/SettingPointDto.html",[3,0.206,4,0.186,5,0.186,7,0.248,8,0.693,10,0.952,11,0.667,12,0.021,13,0.551,16,0.423,23,1.602,25,0.012,26,0.012,46,1.395,52,0.123,68,1.092,71,1.166,114,2.369,125,0.922,187,1.229,188,1.926,192,1.229,196,1.81,201,1.157,203,2.055,204,3.141,206,1.518,207,3.366,208,2.286,210,2.055,211,1.494,219,1.229,234,1.229,357,1.909,358,2.106,359,2.245,429,1.704,454,1.704,468,1.606,469,2.56,470,2.2,471,2.881,474,3.668,475,1.738,476,2.56,477,2.56,478,1.494,479,3.588,480,3.039,481,3.039,482,2.56,483,3.409,484,1.738,485,1.738,486,1.395,487,1.608,488,1.608,489,1.738,490,1.738,491,1.738,492,1.738,493,1.738,494,1.738,495,1.738,496,2.527,497,2.366,498,1.738,499,2.527,500,1.738,626,2.761,627,2.761,628,2.761,629,2.761]],["title/coverage.html",[630,3.736]],["body/coverage.html",[0,1.215,1,1.392,5,0.185,6,3.311,11,0.292,12,0.021,17,1.491,24,1.392,25,0.012,26,0.012,42,1.892,43,1.892,52,0.141,53,2.09,54,2.09,56,2.09,82,1.735,85,2.363,90,1.305,95,1.392,124,1.735,126,3.079,143,1.735,151,1.603,152,1.603,153,1.603,154,1.603,161,1.603,162,1.603,163,1.603,176,2.556,177,2.354,187,1.226,192,1.226,196,1.226,201,1.155,219,1.226,225,1.392,226,1.155,230,1.892,235,1.735,259,1.603,260,2.354,273,2.09,274,2.354,299,1.892,303,2.354,326,2.354,352,1.392,353,1.392,354,1.392,355,1.392,441,5.61,468,3.301,509,3.301,515,1.491,516,3.349,523,1.491,525,1.491,528,2.354,529,1.491,530,3.079,534,1.491,537,2.354,552,1.491,568,1.892,570,2.354,577,3.079,591,2.09,609,2.354,630,2.09,631,2.354,632,2.756,633,2.756,634,2.354,635,4.061,636,6.63,637,6.137,638,6.429,639,6.137,640,5.321,641,5.673,642,4.822,643,4.119,644,2.354,645,2.354,646,2.354,647,2.354,648,2.756,649,2.354,650,2.354,651,2.756,652,4.061,653,2.756,654,2.756,655,2.756]],["title/dependencies.html",[30,2.53,656,2.586]],["body/dependencies.html",[12,0.021,25,0.016,26,0.016,30,2.574,45,1.399,52,0.116,86,2.394,87,2.394,89,3.355,159,2.394,234,1.969,331,4.804,362,3.355,363,4.804,365,3.78,425,3.038,486,2.236,590,3.78,615,3.78,657,4.424,658,4.424,659,4.424,660,4.424,661,6.864,662,4.424,663,4.424,664,5.623,665,3.78,666,4.424,667,4.424,668,4.424,669,4.424,670,4.424,671,4.424,672,4.424,673,4.424,674,4.424,675,4.424,676,4.424,677,4.424,678,4.424,679,4.424,680,4.424,681,4.424,682,4.424,683,4.424]],["title/miscellaneous/enumerations.html",[684,1.53,685,3.715]],["body/miscellaneous/enumerations.html",[7,0.378,12,0.021,14,2.579,22,3.513,25,0.016,26,0.016,216,4.129,277,4.616,349,4.129,357,2.153,358,2.153,359,2.153,366,4.841,384,3.594,497,3.168,684,2.126,685,3.594,686,5.445,687,6.384,688,4.207,689,4.207,690,4.207,691,5.445,692,5.445,693,5.445,694,5.445,695,5.445,696,5.445,697,4.652,698,5.445,699,4.207,700,4.207,701,5.445,702,4.207,703,5.445]],["title/miscellaneous/functions.html",[684,1.53,704,3.715]],["body/miscellaneous/functions.html",[7,0.481,12,0.02,25,0.018,26,0.018,77,2.65,78,2.706,230,4.619,634,4.576,649,4.576,650,5.747,684,2.706,704,4.576,705,5.356,706,5.356,707,5.356]],["title/index.html",[7,0.272,708,2.586,709,2.586]],["body/index.html",[4,0.28,12,0.021,25,0.016,26,0.016,386,3.162,487,1.648,488,1.648,611,3.562,630,3.162,710,4.169,711,4.169,712,5.413,713,4.169,714,4.169,715,4.169,716,4.169,717,4.169,718,4.169,719,6.011,720,4.169,721,4.169,722,4.169,723,4.169,724,6.879,725,4.169,726,3.562,727,6.757,728,4.169,729,4.169,730,5.413,731,4.169,732,4.169,733,4.169,734,4.169,735,5.413,736,5.413,737,4.169,738,4.169,739,4.169,740,4.624,741,5.413,742,4.169,743,4.169,744,4.169,745,4.169,746,4.169,747,3.562,748,4.169,749,4.169,750,4.169,751,4.169,752,4.169,753,4.169,754,4.169,755,4.169,756,4.169,757,4.169,758,4.169,759,4.169,760,4.169,761,4.169,762,4.169,763,2.863]],["title/license.html",[708,2.586,709,2.586,763,2.079]],["body/license.html",[12,0.016,25,0.016,26,0.016,39,2.624,631,3.562,665,3.562,697,3.562,740,3.562,763,2.863,764,6.011,765,4.169,766,4.169,767,4.169,768,5.413,769,4.169,770,4.169,771,4.169,772,4.169,773,4.169,774,4.169,775,5.413,776,7.048,777,4.169,778,4.169,779,4.169,780,6.011,781,4.169,782,5.413,783,4.169,784,4.169,785,5.413,786,4.169,787,4.169,788,4.169,789,4.169,790,4.169,791,4.169,792,5.413,793,4.169,794,4.169,795,4.169,796,4.169,797,4.169,798,4.169,799,4.169,800,5.413,801,5.413,802,4.169,803,4.169,804,4.169,805,4.169,806,4.169,807,4.169,808,4.169,809,4.169,810,4.169,811,4.169,812,4.169,813,4.169,814,4.169,815,4.169,816,4.169,817,4.169,818,4.169,819,4.169,820,4.169,821,4.169,822,4.169,823,4.169,824,4.169,825,4.169,826,4.169,827,4.169,828,4.169,829,4.169,830,4.169]],["title/modules.html",[29,2.192]],["body/modules.html",[12,0.018,25,0.018,26,0.018,28,3.5,29,2.269,33,2.576,34,2.414,35,3.209,36,3.209,169,2.414,175,2.414,747,5.628,831,6.587,832,6.587,833,7.187,834,6.837,835,6.837]],["title/overview.html",[836,4.208]],["body/overview.html",[2,1.576,12,0.021,25,0.016,26,0.016,28,4.892,29,1.878,30,3.174,31,3.605,32,3.605,33,3.055,34,3.027,35,4.401,36,4.485,37,3.747,38,2.898,39,2.657,41,2.898,53,3.201,125,1.41,169,3.027,175,3.027,208,1.999,225,3.23,294,3.605,295,3.605,296,3.605,325,3.201,435,4.661,552,3.458,563,3.605,565,3.605,836,3.605,837,4.22,838,4.22,839,4.22]],["title/properties.html",[8,0.741,656,2.586]],["body/properties.html",[8,0.943,12,0.021,25,0.018,26,0.018,487,2.186,488,2.186,521,3.216,763,3.796,840,5.528,841,5.528]],["title/miscellaneous/typealiases.html",[684,1.53,842,4.348]],["body/miscellaneous/typealiases.html",[7,0.502,11,0.592,12,0.019,25,0.019,26,0.019,56,4.244,92,5.542,684,2.828,843,5.596,844,5.596]],["title/miscellaneous/variables.html",[684,1.53,845,3.715]],["body/miscellaneous/variables.html",[7,0.288,11,0.339,12,0.022,23,0.815,25,0.013,26,0.013,67,2.842,71,0.547,74,2.431,90,1.518,93,2.201,95,1.62,98,2.635,99,2.431,112,2.431,113,1.518,120,1.734,123,2.431,126,2.431,143,2.851,144,2.739,145,2.739,146,2.739,147,2.431,148,2.739,149,2.739,151,2.635,152,2.635,153,2.635,154,2.635,161,2.635,162,2.635,163,2.635,236,3.87,276,4.582,277,4.2,281,2.635,425,2.201,515,1.734,517,2.018,518,2.018,519,3.306,520,2.018,521,1.865,522,1.865,523,1.734,524,2.851,525,1.734,526,2.851,577,2.431,580,4.487,591,3.435,592,2.739,612,2.739,643,2.739,644,2.739,645,2.739,646,2.739,647,2.739,684,1.62,726,2.739,845,2.739,846,3.206,847,3.206,848,3.206,849,5.252,850,3.206,851,3.206,852,3.206,853,5.708,854,3.206,855,3.206,856,3.206,857,3.206,858,3.206,859,4.529,860,3.206,861,3.206,862,3.206,863,3.206,864,3.206,865,3.206,866,3.206,867,3.206,868,3.206,869,3.206,870,3.206,871,3.206,872,3.206,873,3.206,874,3.206,875,3.206,876,3.206,877,3.206,878,3.206,879,3.206,880,3.206,881,3.206,882,3.206]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":441,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["0.0.1",{"_index":840,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":208,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"overview.html":{}}}],["10",{"_index":592,"title":{},"body":{"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":489,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["12",{"_index":839,"title":{},"body":{"overview.html":{}}}],["12345678",{"_index":531,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["14",{"_index":838,"title":{},"body":{"overview.html":{}}}],["1d",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":435,"title":{},"body":{"injectables/BookServiceImpl.html":{},"overview.html":{}}}],["2.0.0",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["2022",{"_index":766,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.14.188",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["404",{"_index":391,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["5",{"_index":211,"title":{},"body":{"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["5.1.0",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["6.5.0",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["6379",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":837,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["8.5.0",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["9.1.6",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":145,"title":{},"body":{"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["_aggregatecontent",{"_index":327,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["_aggregatecontent(undefined",{"_index":334,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["_generatetoken",{"_index":578,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["_generatetoken(payload",{"_index":582,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["_setquerycontent",{"_index":328,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["_setquerycontent(undefined",{"_index":337,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["_source",{"_index":406,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["_source.contentid",{"_index":407,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["above",{"_index":799,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":304,"title":{},"body":{"classes/BookService.html":{},"classes/MemberService.html":{}}}],["accesstoken",{"_index":9,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{}}}],["accesstokenexpiration",{"_index":522,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["accesstokenresponse",{"_index":1,"title":{"interfaces/AccessTokenResponse.html":{}},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["action",{"_index":824,"title":{},"body":{"license.html":{}}}],["active",{"_index":497,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/enumerations.html":{}}}],["admin",{"_index":703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["again",{"_index":387,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["aggregate",{"_index":372,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["aggregate.from",{"_index":377,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["aggregate.query.bool.filter",{"_index":467,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["aggregate.size",{"_index":376,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["aliases",{"_index":843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":438,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["amazing",{"_index":748,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":790,"title":{},"body":{"license.html":{}}}],["apiprefix",{"_index":517,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":474,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["apiproperty({name",{"_index":470,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["apiquery",{"_index":232,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["apiquery({name",{"_index":202,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["apitags",{"_index":233,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["apitags('book",{"_index":237,"title":{},"body":{"controllers/BookController.html":{}}}],["apitags('member",{"_index":554,"title":{},"body":{"controllers/MemberController.html":{}}}],["app",{"_index":611,"title":{},"body":{"classes/Path.html":{},"index.html":{}}}],["appconfig",{"_index":151,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":718,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":28,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentshost",{"_index":282,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["arising",{"_index":828,"title":{},"body":{"license.html":{}}}],["array",{"_index":491,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["arrayminsize",{"_index":475,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["arrayminsize(1",{"_index":494,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["arraynotempty",{"_index":476,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["array})@isarray()@arraynotempty()@isuuid('all",{"_index":623,"title":{},"body":{"classes/SelectContentDto.html":{}}}],["associated",{"_index":777,"title":{},"body":{"license.html":{}}}],["async",{"_index":61,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"injectables/MemberServiceImpl.html":{}}}],["audio",{"_index":694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["auth",{"_index":143,"title":{},"body":{"classes/Authorizer.html":{},"controllers/BookController.html":{},"controllers/MemberController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authguard",{"_index":54,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":488,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"index.html":{},"properties.html":{}}}],["authorization",{"_index":107,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authorizer",{"_index":124,"title":{"classes/Authorizer.html":{}},"body":{"classes/Authorizer.html":{},"controllers/BookController.html":{},"controllers/MemberController.html":{},"coverage.html":{}}}],["authorizer(user",{"_index":149,"title":{},"body":{"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["authorizer.requestaccessforadmin",{"_index":241,"title":{},"body":{"controllers/BookController.html":{}}}],["authorizer.requestaccessformember",{"_index":250,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["authors",{"_index":817,"title":{},"body":{"license.html":{}}}],["authrequest",{"_index":92,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/typealiases.html":{}}}],["available",{"_index":835,"title":{},"body":{"modules.html":{}}}],["await",{"_index":242,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["backers",{"_index":749,"title":{},"body":{"index.html":{}}}],["balance",{"_index":452,"title":{},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{}}}],["bcrypt",{"_index":590,"title":{},"body":{"injectables/MemberServiceImpl.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":603,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["bcrypt.hash(password",{"_index":599,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["bearerauth",{"_index":230,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bearerauth()@post('checkout",{"_index":189,"title":{},"body":{"controllers/BookController.html":{}}}],["bearerauth()@post('create",{"_index":193,"title":{},"body":{"controllers/BookController.html":{}}}],["bearerauth()@post('select",{"_index":220,"title":{},"body":{"controllers/BookController.html":{}}}],["bearerauth()@post('setting",{"_index":197,"title":{},"body":{"controllers/BookController.html":{}}}],["bearerauth()@put('setting",{"_index":223,"title":{},"body":{"controllers/BookController.html":{}}}],["body",{"_index":227,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["book",{"_index":238,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["book.abstract",{"_index":298,"title":{},"body":{"modules/BookModule.html":{},"injectables/BookServiceImpl.html":{}}}],["book.dto",{"_index":323,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["book.enum",{"_index":360,"title":{},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{}}}],["book.implement",{"_index":300,"title":{},"body":{"modules/BookModule.html":{}}}],["book.interface",{"_index":324,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["bookconfigmodule",{"_index":33,"title":{"modules/BookConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"modules.html":{},"overview.html":{}}}],["bookcontroller",{"_index":42,"title":{"controllers/BookController.html":{}},"body":{"modules/AppModule.html":{},"controllers/BookController.html":{},"coverage.html":{}}}],["bookelasticmodule",{"_index":169,"title":{"modules/BookElasticModule.html":{}},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{},"modules.html":{},"overview.html":{}}}],["bookexception",{"_index":259,"title":{"classes/BookException.html":{}},"body":{"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["bookexception(httpstatus.bad_request",{"_index":437,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["bookexception(httpstatus.not_found",{"_index":445,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["bookexceptionfilter",{"_index":273,"title":{"classes/BookExceptionFilter.html":{}},"body":{"classes/BookExceptionFilter.html":{},"coverage.html":{}}}],["bookjwttokenmodule",{"_index":34,"title":{"modules/BookJWTTokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{},"modules.html":{},"overview.html":{}}}],["bookmodule",{"_index":35,"title":{"modules/BookModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules.html":{},"overview.html":{}}}],["bookredismodule",{"_index":175,"title":{"modules/BookRedisModule.html":{}},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{},"modules.html":{},"overview.html":{}}}],["books",{"_index":236,"title":{},"body":{"controllers/BookController.html":{},"miscellaneous/variables.html":{}}}],["bookservice",{"_index":225,"title":{"classes/BookService.html":{}},"body":{"controllers/BookController.html":{},"modules/BookModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"coverage.html":{},"overview.html":{}}}],["bookserviceimpl",{"_index":299,"title":{"injectables/BookServiceImpl.html":{}},"body":{"modules/BookModule.html":{},"injectables/BookServiceImpl.html":{},"coverage.html":{}}}],["bool",{"_index":374,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["bootstrap",{"_index":650,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":833,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":831,"title":{},"body":{"modules.html":{}}}],["building",{"_index":713,"title":{},"body":{"index.html":{}}}],["c",{"_index":765,"title":{},"body":{"license.html":{}}}],["cache",{"_index":331,"title":{},"body":{"injectables/BookServiceImpl.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":356,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["cachekey",{"_index":423,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["cachemodule",{"_index":156,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["cachemodule.registerasync",{"_index":174,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["cachemoduleoptions",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":62,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canactivate(context",{"_index":73,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cart",{"_index":424,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["catch",{"_index":115,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["catch(bookexception",{"_index":286,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["catch(exception",{"_index":280,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["charge",{"_index":772,"title":{},"body":{"license.html":{}}}],["check",{"_index":447,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["checkout",{"_index":178,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["checkout(@auth",{"_index":257,"title":{},"body":{"controllers/BookController.html":{}}}],["checkout(authorizer",{"_index":185,"title":{},"body":{"controllers/BookController.html":{}}}],["checkout(userid",{"_index":306,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["checkoutdto",{"_index":187,"title":{"classes/CheckoutDto.html":{}},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["claim",{"_index":820,"title":{},"body":{"license.html":{}}}],["class",{"_index":52,"title":{"classes/Authorizer.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/ISelectContent.html":{},"classes/LoginDto.html":{},"classes/MemberService.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":125,"title":{},"body":{"classes/Authorizer.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/ISelectContent.html":{},"classes/LoginDto.html":{},"classes/MemberService.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bookmodule",{"_index":294,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_exports",{"_index":295,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_bookmodule_imports",{"_index":296,"title":{},"body":{"modules/BookModule.html":{},"overview.html":{}}}],["cluster_membermodule",{"_index":563,"title":{},"body":{"modules/MemberModule.html":{},"overview.html":{}}}],["cluster_membermodule_exports",{"_index":565,"title":{},"body":{"modules/MemberModule.html":{},"overview.html":{}}}],["cluster_membermodule_imports",{"_index":564,"title":{},"body":{"modules/MemberModule.html":{}}}],["code",{"_index":267,"title":{},"body":{"classes/BookException.html":{}}}],["commons/decorators",{"_index":231,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["commons/enums",{"_index":350,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["commons/exceptions",{"_index":351,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["commons/interfaces",{"_index":91,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"injectables/MemberServiceImpl.html":{}}}],["commons/modules",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules/MemberModule.html":{}}}],["compare",{"_index":602,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["conditions",{"_index":798,"title":{},"body":{"license.html":{}}}],["config",{"_index":580,"title":{},"body":{"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["config.get('host",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('port",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get(`${path.elasticsearch}.node",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configmodule",{"_index":157,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["configmodule.forroot",{"_index":170,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["configs",{"_index":155,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["configservice",{"_index":67,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":829,"title":{},"body":{"license.html":{}}}],["const",{"_index":98,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookException.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["constructor(code",{"_index":264,"title":{},"body":{"classes/BookException.html":{}}}],["constructor(elasticsearch",{"_index":329,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["constructor(jwtservice",{"_index":65,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor(private",{"_index":97,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"controllers/MemberController.html":{}}}],["constructor(public",{"_index":137,"title":{},"body":{"classes/Authorizer.html":{}}}],["constructor(user",{"_index":130,"title":{},"body":{"classes/Authorizer.html":{}}}],["content",{"_index":216,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"miscellaneous/enumerations.html":{}}}],["contentdto",{"_index":192,"title":{"classes/ContentDto.html":{}},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["contenthits",{"_index":409,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contenthits.hits",{"_index":412,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contenthits.hits.map((hit",{"_index":444,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contentid",{"_index":429,"title":{},"body":{"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["contentids",{"_index":404,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contentids.includes(id",{"_index":417,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contentresponse",{"_index":226,"title":{"interfaces/ContentResponse.html":{}},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"controllers/MemberController.html":{},"coverage.html":{}}}],["contents",{"_index":411,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contents.length",{"_index":422,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contents.reduce((previousvalue",{"_index":453,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["contenttype",{"_index":686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["context",{"_index":76,"title":{},"body":{"guards/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":100,"title":{},"body":{"guards/AuthGuard.html":{}}}],["contract",{"_index":825,"title":{},"body":{"license.html":{}}}],["controller",{"_index":176,"title":{"controllers/BookController.html":{},"controllers/MemberController.html":{}},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{},"coverage.html":{}}}],["controllers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"controllers/BookController.html":{},"controllers/MemberController.html":{},"overview.html":{}}}],["controllers/book.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers/member.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["copies",{"_index":792,"title":{},"body":{"license.html":{}}}],["copy",{"_index":775,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":764,"title":{},"body":{"license.html":{}}}],["count",{"_index":419,"title":{},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{}}}],["coverage",{"_index":630,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createcontent",{"_index":179,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["createcontent(@auth",{"_index":240,"title":{},"body":{"controllers/BookController.html":{}}}],["createcontent(authorizer",{"_index":191,"title":{},"body":{"controllers/BookController.html":{}}}],["createcontent(dto",{"_index":309,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["createparamdecorator",{"_index":136,"title":{},"body":{"classes/Authorizer.html":{}}}],["createparamdecorator(async",{"_index":144,"title":{},"body":{"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["createpointsetting",{"_index":180,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["createpointsetting(authorizer",{"_index":195,"title":{},"body":{"controllers/BookController.html":{}}}],["createpointsetting(dto",{"_index":311,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["credit",{"_index":695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ctx",{"_index":147,"title":{},"body":{"classes/Authorizer.html":{},"classes/BookExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx._source[\"enabled",{"_index":397,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["ctx._source[\"oneto",{"_index":399,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":148,"title":{},"body":{"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":821,"title":{},"body":{"license.html":{}}}],["deal",{"_index":779,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":830,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":188,"title":{},"body":{"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["deductpoint",{"_index":465,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["default",{"_index":276,"title":{},"body":{"classes/BookExceptionFilter.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":68,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/ISelectContent.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["delete",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":30,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules/MemberModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":487,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":726,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["displayname",{"_index":21,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"classes/LoginDto.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{}}}],["distribute",{"_index":788,"title":{},"body":{"license.html":{}}}],["document",{"_index":389,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["documentation",{"_index":631,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dto",{"_index":186,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{}}}],["dto.contentid].flatmap((id",{"_index":432,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["dto.method",{"_index":457,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["e2e",{"_index":737,"title":{},"body":{"index.html":{}}}],["each",{"_index":493,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["efficient",{"_index":714,"title":{},"body":{"index.html":{}}}],["elastic/elasticsearch",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["elastic/elasticsearch/lib/api/types",{"_index":367,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["elasticconfig",{"_index":152,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["elasticsearch",{"_index":333,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{}}}],["elasticsearchmodule",{"_index":158,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["elasticsearchmodule.registerasync",{"_index":165,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["elasticsearchmoduleoptions",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elasticsearchservice",{"_index":330,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["empty",{"_index":446,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["enabled",{"_index":496,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["enum",{"_index":471,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["enumerations",{"_index":685,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":116,"title":{},"body":{"guards/AuthGuard.html":{}}}],["error",{"_index":262,"title":{},"body":{"classes/BookException.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["error.statuscode",{"_index":390,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["event",{"_index":816,"title":{},"body":{"license.html":{}}}],["example",{"_index":207,"title":{},"body":{"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["exception",{"_index":284,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["exception.getlocalizedexception",{"_index":290,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["exceptionfilter",{"_index":275,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["executioncontext",{"_index":74,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":385,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["expired",{"_index":119,"title":{},"body":{"guards/AuthGuard.html":{}}}],["expiresin",{"_index":597,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["exports",{"_index":168,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{}}}],["express",{"_index":665,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":261,"title":{},"body":{"classes/BookException.html":{}}}],["factory",{"_index":164,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["false",{"_index":248,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["false})@apiquery({name",{"_index":205,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["fastify",{"_index":89,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookExceptionFilter.html":{},"dependencies.html":{}}}],["fastify/static",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["fastifyreply",{"_index":285,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["fastifyrequest",{"_index":88,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["files",{"_index":778,"title":{},"body":{"license.html":{}}}],["filter",{"_index":416,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["fitness",{"_index":812,"title":{},"body":{"license.html":{}}}],["flat",{"_index":431,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["following",{"_index":797,"title":{},"body":{"license.html":{}}}],["forbidden",{"_index":141,"title":{},"body":{"classes/Authorizer.html":{}}}],["found",{"_index":451,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["framework",{"_index":712,"title":{},"body":{"index.html":{}}}],["free",{"_index":771,"title":{},"body":{"license.html":{}}}],["function",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":704,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":795,"title":{},"body":{"license.html":{}}}],["get('')@bearerauth",{"_index":547,"title":{},"body":{"controllers/MemberController.html":{}}}],["get('library",{"_index":561,"title":{},"body":{"controllers/MemberController.html":{}}}],["get('list",{"_index":249,"title":{},"body":{"controllers/BookController.html":{}}}],["get('select",{"_index":254,"title":{},"body":{"controllers/BookController.html":{}}}],["getcontent",{"_index":181,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["getcontent(authorizer",{"_index":199,"title":{},"body":{"controllers/BookController.html":{}}}],["getcontent(userid",{"_index":313,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["getcontentquery",{"_index":201,"title":{"classes/GetContentQuery.html":{}},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["getelasticmoduleoptions",{"_index":161,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getjwtmoduleoptions",{"_index":162,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getlibrary",{"_index":305,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{}}}],["getlibrary(authorizer",{"_index":540,"title":{},"body":{"controllers/MemberController.html":{}}}],["getlibrary(userid",{"_index":315,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["getlocalizedexception",{"_index":263,"title":{},"body":{"classes/BookException.html":{}}}],["getredismoduleoptions",{"_index":163,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getresponse",{"_index":291,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["getselectedcontent",{"_index":182,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["getselectedcontent(authorizer",{"_index":214,"title":{},"body":{"controllers/BookController.html":{}}}],["getselectedcontent(userid",{"_index":317,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["getting",{"_index":708,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":770,"title":{},"body":{"license.html":{}}}],["graph",{"_index":834,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":744,"title":{},"body":{"index.html":{}}}],["guard",{"_index":53,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":55,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hashpassword",{"_index":598,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["header",{"_index":108,"title":{},"body":{"guards/AuthGuard.html":{}}}],["here",{"_index":754,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":769,"title":{},"body":{"license.html":{}}}],["hit._id",{"_index":414,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["hit._source",{"_index":415,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["hits",{"_index":379,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["hits?._source",{"_index":461,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["holders",{"_index":818,"title":{},"body":{"license.html":{}}}],["host",{"_index":281,"title":{},"body":{"classes/BookExceptionFilter.html":{},"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":288,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["httpexception",{"_index":83,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookException.html":{}}}],["https://nestjs.com",{"_index":760,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":84,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookException.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["httpstatus.bad_request",{"_index":383,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["httpstatus.forbidden",{"_index":140,"title":{},"body":{"classes/Authorizer.html":{}}}],["httpstatus.unauthorized",{"_index":104,"title":{},"body":{"guards/AuthGuard.html":{}}}],["iappconfig",{"_index":515,"title":{"interfaces/IAppConfig.html":{}},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icontent",{"_index":352,"title":{"interfaces/IContent.html":{}},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["id",{"_index":18,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"interfaces/IMember.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{}}}],["identifier",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":442,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["ielasticconfig",{"_index":525,"title":{"interfaces/IElasticConfig.html":{}},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ijwtconfig",{"_index":90,"title":{"interfaces/IJWTConfig.html":{}},"body":{"guards/AuthGuard.html":{},"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imember",{"_index":17,"title":{"interfaces/IMember.html":{}},"body":{"interfaces/AccessTokenResponse.html":{},"injectables/BookServiceImpl.html":{},"interfaces/IMember.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["implements",{"_index":94,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["implied",{"_index":808,"title":{},"body":{"license.html":{}}}],["import",{"_index":13,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"interfaces/IMember.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{}}}],["inactive",{"_index":696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["included",{"_index":802,"title":{},"body":{"license.html":{}}}],["including",{"_index":782,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AccessTokenResponse.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexpath",{"_index":349,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/enumerations.html":{}}}],["indexpath.content",{"_index":373,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["indexpath.member",{"_index":393,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["indexpath.settingpoint",{"_index":381,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["indexpath.transaction",{"_index":403,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["inject",{"_index":167,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"injectables/BookServiceImpl.html":{}}}],["inject(cache_manager",{"_index":368,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["injectable",{"_index":85,"title":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["injectables",{"_index":325,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"overview.html":{}}}],["installation",{"_index":723,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":725,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AccessTokenResponse.html":{},"interfaces/ContentResponse.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"interfaces/MemberResponse.html":{}},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/ContentResponse.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"interfaces/MemberResponse.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/ContentResponse.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"interfaces/MemberResponse.html":{},"overview.html":{}}}],["invalid",{"_index":118,"title":{},"body":{"guards/AuthGuard.html":{}}}],["iredisconfig",{"_index":523,"title":{"interfaces/IRedisConfig.html":{}},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isarray",{"_index":477,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["iselectcontent",{"_index":353,"title":{"classes/ISelectContent.html":{}},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["isenum",{"_index":478,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isenum(paymentmethod",{"_index":495,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isenum(pointenabled",{"_index":498,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isenum(role",{"_index":536,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isenum(visibility",{"_index":490,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isettingpoint",{"_index":354,"title":{"interfaces/ISettingPoint.html":{}},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["isglobal",{"_index":172,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["isnotempty",{"_index":479,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isnumber",{"_index":480,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isnumberstring",{"_index":481,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isoptional",{"_index":482,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isstring",{"_index":483,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isuuid",{"_index":484,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["isuuid('all",{"_index":492,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["itokenpayload",{"_index":82,"title":{"interfaces/ITokenPayload.html":{}},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"interfaces/ITokenPayload.html":{},"coverage.html":{}}}],["itransaction",{"_index":355,"title":{"interfaces/ITransaction.html":{}},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["join",{"_index":751,"title":{},"body":{"index.html":{}}}],["json.parse(store",{"_index":430,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["json.stringify",{"_index":440,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["json.stringify(dto",{"_index":428,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["jwt",{"_index":579,"title":{},"body":{"injectables/MemberServiceImpl.html":{},"classes/Path.html":{}}}],["jwtconfig",{"_index":153,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtmodule",{"_index":160,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["jwtmodule.registerasync",{"_index":173,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["jwtmoduleoptions",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtsecret",{"_index":120,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":66,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MemberServiceImpl.html":{}}}],["kamil",{"_index":757,"title":{},"body":{"index.html":{}}}],["kind",{"_index":807,"title":{},"body":{"license.html":{}}}],["lang",{"_index":395,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["liability",{"_index":822,"title":{},"body":{"license.html":{}}}],["liable",{"_index":819,"title":{},"body":{"license.html":{}}}],["license",{"_index":763,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":741,"title":{},"body":{"index.html":{}}}],["limitation",{"_index":783,"title":{},"body":{"license.html":{}}}],["limited",{"_index":809,"title":{},"body":{"license.html":{}}}],["literal",{"_index":338,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["load",{"_index":171,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["localhost",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localizedexception",{"_index":289,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["lodash",{"_index":365,"title":{},"body":{"injectables/BookServiceImpl.html":{},"dependencies.html":{}}}],["logger",{"_index":59,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookExceptionFilter.html":{},"injectables/MemberServiceImpl.html":{}}}],["logger(authguard.name",{"_index":96,"title":{},"body":{"guards/AuthGuard.html":{}}}],["logger(bookexceptionfilter.name",{"_index":278,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["logger(memberservice.name",{"_index":589,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["login",{"_index":538,"title":{},"body":{"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["login(@body",{"_index":555,"title":{},"body":{"controllers/MemberController.html":{}}}],["login(dto",{"_index":543,"title":{},"body":{"controllers/MemberController.html":{},"classes/MemberService.html":{}}}],["login(undefined",{"_index":584,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["logindto",{"_index":529,"title":{"classes/LoginDto.html":{}},"body":{"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["manager",{"_index":363,"title":{},"body":{"injectables/BookServiceImpl.html":{},"dependencies.html":{}}}],["map((hit",{"_index":413,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["match",{"_index":370,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["match_all",{"_index":382,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["me(@auth",{"_index":559,"title":{},"body":{"controllers/MemberController.html":{}}}],["me(authorizer",{"_index":546,"title":{},"body":{"controllers/MemberController.html":{}}}],["me(userid",{"_index":572,"title":{},"body":{"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["member",{"_index":366,"title":{},"body":{"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"miscellaneous/enumerations.html":{}}}],["member.abstract",{"_index":567,"title":{},"body":{"modules/MemberModule.html":{},"injectables/MemberServiceImpl.html":{}}}],["member.dto",{"_index":575,"title":{},"body":{"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["member.enum",{"_index":15,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"classes/LoginDto.html":{},"interfaces/MemberResponse.html":{},"classes/RegisterDto.html":{}}}],["member.implement",{"_index":569,"title":{},"body":{"modules/MemberModule.html":{}}}],["member.interface",{"_index":576,"title":{},"body":{"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["membercontroller",{"_index":43,"title":{"controllers/MemberController.html":{}},"body":{"modules/AppModule.html":{},"controllers/MemberController.html":{},"coverage.html":{}}}],["memberhits",{"_index":448,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["memberhits.hits",{"_index":450,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["membermodule",{"_index":36,"title":{"modules/MemberModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MemberModule.html":{},"modules.html":{},"overview.html":{}}}],["memberresponse",{"_index":24,"title":{"interfaces/MemberResponse.html":{}},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["members",{"_index":553,"title":{},"body":{"controllers/MemberController.html":{}}}],["memberservice",{"_index":552,"title":{"classes/MemberService.html":{}},"body":{"controllers/MemberController.html":{},"modules/MemberModule.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{},"overview.html":{}}}],["memberserviceimpl",{"_index":568,"title":{"injectables/MemberServiceImpl.html":{}},"body":{"modules/MemberModule.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{}}}],["merchantability",{"_index":811,"title":{},"body":{"license.html":{}}}],["merge",{"_index":787,"title":{},"body":{"license.html":{}}}],["message",{"_index":105,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookException.html":{}}}],["metadata",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":469,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["methoddecorator",{"_index":707,"title":{},"body":{"miscellaneous/functions.html":{}}}],["methods",{"_index":60,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["min",{"_index":485,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["min(1",{"_index":500,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["miscellaneous",{"_index":684,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":106,"title":{},"body":{"guards/AuthGuard.html":{}}}],["mit",{"_index":740,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":730,"title":{},"body":{"index.html":{}}}],["modify",{"_index":786,"title":{},"body":{"license.html":{}}}],["module",{"_index":27,"title":{"modules/AppModule.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{}}}],["modules",{"_index":29,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"modules/MemberModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":753,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":758,"title":{},"body":{"index.html":{}}}],["name",{"_index":71,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":719,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":762,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"injectables/MemberServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":86,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"injectables/MemberServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["nestjs/elasticsearch",{"_index":159,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":87,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"injectables/MemberServiceImpl.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":234,"title":{},"body":{"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"dependencies.html":{}}}],["new",{"_index":95,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":526,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":711,"title":{},"body":{"index.html":{}}}],["nodeenv",{"_index":518,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":815,"title":{},"body":{"license.html":{}}}],["notice",{"_index":800,"title":{},"body":{"license.html":{}}}],["npm",{"_index":724,"title":{},"body":{"index.html":{}}}],["number",{"_index":23,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/variables.html":{}}}],["number(config.get('ttl",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(page",{"_index":378,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["number(process.env.port",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(process.env.storage_redis_ttl",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(this.code",{"_index":272,"title":{},"body":{"classes/BookException.html":{}}}],["number})@isnumber()@min(1)@isnotempty",{"_index":628,"title":{},"body":{"classes/SettingPointDto.html":{}}}],["number})@isnumberstring()@isnotempty",{"_index":510,"title":{},"body":{"classes/GetContentQuery.html":{}}}],["nuza555xx",{"_index":767,"title":{},"body":{"license.html":{}}}],["obtaining",{"_index":774,"title":{},"body":{"license.html":{}}}],["oneto",{"_index":499,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["open",{"_index":742,"title":{},"body":{"index.html":{}}}],["optional",{"_index":72,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"interfaces/IMember.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["otherwise",{"_index":827,"title":{},"body":{"license.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules/MemberModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":836,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":439,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["package",{"_index":656,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":206,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["painless",{"_index":396,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["parameters",{"_index":70,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["params",{"_index":401,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["params.enabled",{"_index":398,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["params.oneto",{"_index":400,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["particular",{"_index":813,"title":{},"body":{"license.html":{}}}],["password",{"_index":20,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"classes/LoginDto.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{}}}],["path",{"_index":235,"title":{"classes/Path.html":{}},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{},"classes/Path.html":{},"coverage.html":{}}}],["path.app",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.elasticsearch",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.redisstore",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path.token",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":110,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookException.html":{},"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"injectables/MemberServiceImpl.html":{}}}],["payload._source.password",{"_index":604,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["payload.displayname",{"_index":607,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["payload.id",{"_index":595,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["payload.point",{"_index":608,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["payload.role",{"_index":596,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["payload.username",{"_index":606,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["paymentmethod",{"_index":357,"title":{},"body":{"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/enumerations.html":{}}}],["paymentmethod.point",{"_index":462,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["paymentmethod})@isstring()@isnotempty()@isenum(paymentmethod",{"_index":472,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["permission",{"_index":768,"title":{},"body":{"license.html":{}}}],["permit",{"_index":793,"title":{},"body":{"license.html":{}}}],["person",{"_index":773,"title":{},"body":{"license.html":{}}}],["persons",{"_index":794,"title":{},"body":{"license.html":{}}}],["please",{"_index":386,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"index.html":{}}}],["point",{"_index":22,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"controllers/BookController.html":{},"interfaces/IMember.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pointenabled",{"_index":358,"title":{},"body":{"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/enumerations.html":{}}}],["pointenabled.active",{"_index":464,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["pointenabled})@isstring()@isnotempty()@isenum(pointenabled",{"_index":626,"title":{},"body":{"classes/SettingPointDto.html":{}}}],["port",{"_index":519,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":804,"title":{},"body":{"license.html":{}}}],["post",{"_index":228,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["post('checkout",{"_index":256,"title":{},"body":{"controllers/BookController.html":{}}}],["post('create",{"_index":239,"title":{},"body":{"controllers/BookController.html":{}}}],["post('login",{"_index":544,"title":{},"body":{"controllers/MemberController.html":{}}}],["post('register",{"_index":550,"title":{},"body":{"controllers/MemberController.html":{}}}],["post('select",{"_index":252,"title":{},"body":{"controllers/BookController.html":{}}}],["post('setting",{"_index":244,"title":{},"body":{"controllers/BookController.html":{}}}],["prefix",{"_index":520,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["prepare",{"_index":456,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["presentation",{"_index":691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["previousvalue",{"_index":455,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["price",{"_index":454,"title":{},"body":{"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["private",{"_index":57,"title":{},"body":{"guards/AuthGuard.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"injectables/MemberServiceImpl.html":{}}}],["process.env.access_token_expiration",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.api_prefix",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.elasticsearch_node",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.prefix",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.project_name",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.storage_redis_host",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.storage_redis_port",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.version",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":732,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":710,"title":{},"body":{"index.html":{}}}],["project",{"_index":743,"title":{},"body":{"index.html":{}}}],["promise",{"_index":78,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/AccessTokenResponse.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookExceptionFilter.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"properties.html":{}}}],["provide",{"_index":301,"title":{},"body":{"modules/BookModule.html":{},"modules/MemberModule.html":{}}}],["provided",{"_index":805,"title":{},"body":{"license.html":{}}}],["providers",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules/MemberModule.html":{}}}],["public",{"_index":127,"title":{},"body":{"classes/Authorizer.html":{}}}],["publish",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["purpose",{"_index":814,"title":{},"body":{"license.html":{}}}],["put",{"_index":229,"title":{},"body":{"controllers/BookController.html":{}}}],["put('setting",{"_index":246,"title":{},"body":{"controllers/BookController.html":{}}}],["query",{"_index":200,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"injectables/MemberServiceImpl.html":{}}}],["query.page",{"_index":418,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["query.push",{"_index":369,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["query.size",{"_index":420,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["querydslquerycontainer",{"_index":340,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["read",{"_index":752,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":58,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["redis",{"_index":615,"title":{},"body":{"classes/Path.html":{},"dependencies.html":{}}}],["redisconfig",{"_index":154,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisstore",{"_index":612,"title":{},"body":{"classes/Path.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":539,"title":{},"body":{"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["register(@body",{"_index":557,"title":{},"body":{"controllers/MemberController.html":{}}}],["register(dto",{"_index":549,"title":{},"body":{"controllers/MemberController.html":{},"classes/MemberService.html":{}}}],["register(undefined",{"_index":587,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["registeras",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerdto",{"_index":534,"title":{"classes/RegisterDto.html":{}},"body":{"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["repository",{"_index":722,"title":{},"body":{"index.html":{}}}],["request",{"_index":99,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["request.$user",{"_index":112,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["request.headers.authorization?.replace(/^bearer",{"_index":101,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestaccessforadmin",{"_index":128,"title":{},"body":{"classes/Authorizer.html":{}}}],["requestaccessformember",{"_index":129,"title":{},"body":{"classes/Authorizer.html":{}}}],["required",{"_index":204,"title":{},"body":{"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules/MemberModule.html":{},"overview.html":{}}}],["restriction",{"_index":781,"title":{},"body":{"license.html":{}}}],["results",{"_index":25,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":113,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":77,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"controllers/MemberController.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":784,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":14,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"classes/Authorizer.html":{},"interfaces/IMember.html":{},"interfaces/ITokenPayload.html":{},"classes/LoginDto.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{},"miscellaneous/enumerations.html":{}}}],["role.admin",{"_index":139,"title":{},"body":{"classes/Authorizer.html":{}}}],["role.member",{"_index":142,"title":{},"body":{"classes/Authorizer.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["role})@isnotempty()@isenum(role",{"_index":620,"title":{},"body":{"classes/RegisterDto.html":{}}}],["run",{"_index":727,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["saltorrounds",{"_index":591,"title":{},"body":{"injectables/MemberServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":715,"title":{},"body":{"index.html":{}}}],["script",{"_index":394,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["search",{"_index":203,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["searchrequest",{"_index":336,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["secret",{"_index":123,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["selectcontent",{"_index":183,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["selectcontent(authorizer",{"_index":218,"title":{},"body":{"controllers/BookController.html":{}}}],["selectcontent(userid",{"_index":319,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["selectcontentdto",{"_index":219,"title":{"classes/SelectContentDto.html":{}},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["sell",{"_index":791,"title":{},"body":{"license.html":{}}}],["send(localizedexception.getresponse",{"_index":293,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["server",{"_index":716,"title":{},"body":{"index.html":{}}}],["services/book",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"controllers/BookController.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["services/member",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"classes/Authorizer.html":{},"interfaces/ITokenPayload.html":{},"controllers/MemberController.html":{}}}],["setting",{"_index":384,"title":{},"body":{"injectables/BookServiceImpl.html":{},"miscellaneous/enumerations.html":{}}}],["settinghits",{"_index":458,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["settinghits.hits",{"_index":459,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["settingpoint",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["settingpointdto",{"_index":196,"title":{"classes/SettingPointDto.html":{}},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["shall",{"_index":801,"title":{},"body":{"license.html":{}}}],["side",{"_index":717,"title":{},"body":{"index.html":{}}}],["size",{"_index":210,"title":{},"body":{"controllers/BookController.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"controllers/MemberController.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["software",{"_index":776,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookModule.html":{},"modules/BookRedisModule.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"modules/MemberModule.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"index.html":{}}}],["sourcemember",{"_index":449,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["sourcemember.point",{"_index":466,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["sourcesetting",{"_index":460,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["sourcesetting?.enabled",{"_index":463,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["sponsors",{"_index":746,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.decorator.ts",{"_index":705,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.guard.ts",{"_index":844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../book.enum.ts",{"_index":687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../elastic.config.ts",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../elasticsearch.enum.ts",{"_index":688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../factory.ts",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt.config.ts",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":706,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../member.enum.ts",{"_index":689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../member.implement.ts",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../redis.config.ts",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/commons/decorators/auth.decorator.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/commons/decorators/user.decorator.ts",{"_index":126,"title":{},"body":{"classes/Authorizer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/commons/decorators/user.decorator.ts:20",{"_index":135,"title":{},"body":{"classes/Authorizer.html":{}}}],["src/commons/decorators/user.decorator.ts:5",{"_index":131,"title":{},"body":{"classes/Authorizer.html":{}}}],["src/commons/decorators/user.decorator.ts:6",{"_index":132,"title":{},"body":{"classes/Authorizer.html":{}}}],["src/commons/decorators/user.decorator.ts:8",{"_index":133,"title":{},"body":{"classes/Authorizer.html":{}}}],["src/commons/enums/elasticsearch.enum.ts",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/commons/exceptions/exception.filter.ts",{"_index":274,"title":{},"body":{"classes/BookExceptionFilter.html":{},"coverage.html":{}}}],["src/commons/exceptions/exception.filter.ts:7",{"_index":279,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["src/commons/exceptions/exception.filter.ts:9",{"_index":283,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["src/commons/exceptions/exception.ts",{"_index":260,"title":{},"body":{"classes/BookException.html":{},"coverage.html":{}}}],["src/commons/exceptions/exception.ts:3",{"_index":266,"title":{},"body":{"classes/BookException.html":{}}}],["src/commons/exceptions/exception.ts:8",{"_index":268,"title":{},"body":{"classes/BookException.html":{}}}],["src/commons/guards/auth.guard.ts",{"_index":56,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/commons/guards/auth.guard.ts:20",{"_index":69,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/commons/guards/auth.guard.ts:24",{"_index":75,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/commons/guards/auth.guard.ts:52",{"_index":80,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/commons/interfaces/auth.interface.ts",{"_index":528,"title":{},"body":{"interfaces/ITokenPayload.html":{},"coverage.html":{}}}],["src/commons/interfaces/config.interface.ts",{"_index":516,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"coverage.html":{}}}],["src/commons/modules/factory.ts",{"_index":643,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/commons/modules/module.ts",{"_index":150,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["src/configs/app.config.ts",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configs/elastic.config.ts",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configs/jwt.config.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/configs/path.config.ts",{"_index":609,"title":{},"body":{"classes/Path.html":{},"coverage.html":{}}}],["src/configs/path.config.ts:2",{"_index":613,"title":{},"body":{"classes/Path.html":{}}}],["src/configs/path.config.ts:3",{"_index":614,"title":{},"body":{"classes/Path.html":{}}}],["src/configs/path.config.ts:4",{"_index":617,"title":{},"body":{"classes/Path.html":{}}}],["src/configs/path.config.ts:5",{"_index":616,"title":{},"body":{"classes/Path.html":{}}}],["src/configs/redis.config.ts",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/controllers/book.controller.ts",{"_index":177,"title":{},"body":{"controllers/BookController.html":{},"coverage.html":{}}}],["src/controllers/book.controller.ts:21",{"_index":194,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/book.controller.ts:28",{"_index":198,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/book.controller.ts:38",{"_index":224,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/book.controller.ts:51",{"_index":213,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/book.controller.ts:61",{"_index":221,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/book.controller.ts:75",{"_index":217,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/book.controller.ts:86",{"_index":190,"title":{},"body":{"controllers/BookController.html":{}}}],["src/controllers/member.controller.ts",{"_index":537,"title":{},"body":{"controllers/MemberController.html":{},"coverage.html":{}}}],["src/controllers/member.controller.ts:19",{"_index":545,"title":{},"body":{"controllers/MemberController.html":{}}}],["src/controllers/member.controller.ts:24",{"_index":551,"title":{},"body":{"controllers/MemberController.html":{}}}],["src/controllers/member.controller.ts:30",{"_index":548,"title":{},"body":{"controllers/MemberController.html":{}}}],["src/controllers/member.controller.ts:40",{"_index":542,"title":{},"body":{"controllers/MemberController.html":{}}}],["src/main.ts",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/book/book.abstract.ts",{"_index":303,"title":{},"body":{"classes/BookService.html":{},"coverage.html":{}}}],["src/modules/book/book.abstract.ts:11",{"_index":312,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:12",{"_index":322,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:13",{"_index":310,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:14",{"_index":314,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:15",{"_index":320,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:16",{"_index":318,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:17",{"_index":307,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.abstract.ts:18",{"_index":316,"title":{},"body":{"classes/BookService.html":{}}}],["src/modules/book/book.dto.ts",{"_index":468,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{}}}],["src/modules/book/book.dto.ts:103",{"_index":627,"title":{},"body":{"classes/SettingPointDto.html":{}}}],["src/modules/book/book.dto.ts:114",{"_index":629,"title":{},"body":{"classes/SettingPointDto.html":{}}}],["src/modules/book/book.dto.ts:125",{"_index":513,"title":{},"body":{"classes/GetContentQuery.html":{}}}],["src/modules/book/book.dto.ts:134",{"_index":514,"title":{},"body":{"classes/GetContentQuery.html":{}}}],["src/modules/book/book.dto.ts:143",{"_index":511,"title":{},"body":{"classes/GetContentQuery.html":{}}}],["src/modules/book/book.dto.ts:25",{"_index":504,"title":{},"body":{"classes/ContentDto.html":{}}}],["src/modules/book/book.dto.ts:34",{"_index":503,"title":{},"body":{"classes/ContentDto.html":{}}}],["src/modules/book/book.dto.ts:43",{"_index":502,"title":{},"body":{"classes/ContentDto.html":{}}}],["src/modules/book/book.dto.ts:52",{"_index":506,"title":{},"body":{"classes/ContentDto.html":{}}}],["src/modules/book/book.dto.ts:63",{"_index":508,"title":{},"body":{"classes/ContentDto.html":{}}}],["src/modules/book/book.dto.ts:77",{"_index":625,"title":{},"body":{"classes/SelectContentDto.html":{}}}],["src/modules/book/book.dto.ts:90",{"_index":473,"title":{},"body":{"classes/CheckoutDto.html":{}}}],["src/modules/book/book.enum.ts",{"_index":690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/book/book.implement.ts",{"_index":326,"title":{},"body":{"injectables/BookServiceImpl.html":{},"coverage.html":{}}}],["src/modules/book/book.implement.ts:113",{"_index":342,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:121",{"_index":344,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:146",{"_index":347,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:175",{"_index":346,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:213",{"_index":341,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:300",{"_index":345,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:32",{"_index":332,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:38",{"_index":339,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:48",{"_index":335,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:64",{"_index":343,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.implement.ts:97",{"_index":348,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["src/modules/book/book.interface.ts",{"_index":509,"title":{},"body":{"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"coverage.html":{}}}],["src/modules/book/book.interface.ts:13",{"_index":527,"title":{},"body":{"classes/ISelectContent.html":{}}}],["src/modules/book/book.module.ts",{"_index":297,"title":{},"body":{"modules/BookModule.html":{}}}],["src/modules/member/member.abstract.ts",{"_index":570,"title":{},"body":{"classes/MemberService.html":{},"coverage.html":{}}}],["src/modules/member/member.abstract.ts:5",{"_index":574,"title":{},"body":{"classes/MemberService.html":{}}}],["src/modules/member/member.abstract.ts:6",{"_index":571,"title":{},"body":{"classes/MemberService.html":{}}}],["src/modules/member/member.abstract.ts:7",{"_index":573,"title":{},"body":{"classes/MemberService.html":{}}}],["src/modules/member/member.dto.ts",{"_index":530,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/modules/member/member.dto.ts:13",{"_index":622,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/member/member.dto.ts:22",{"_index":618,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/member/member.dto.ts:31",{"_index":619,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/member/member.dto.ts:41",{"_index":621,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/modules/member/member.dto.ts:52",{"_index":533,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/member/member.dto.ts:61",{"_index":532,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/modules/member/member.enum.ts",{"_index":702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/member/member.implement.ts",{"_index":577,"title":{},"body":{"injectables/MemberServiceImpl.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/member/member.implement.ts:115",{"_index":586,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["src/modules/member/member.implement.ts:18",{"_index":581,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["src/modules/member/member.implement.ts:26",{"_index":583,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["src/modules/member/member.implement.ts:37",{"_index":588,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["src/modules/member/member.implement.ts:89",{"_index":585,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["src/modules/member/member.interface.ts",{"_index":6,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"interfaces/MemberResponse.html":{},"coverage.html":{}}}],["src/modules/member/member.module.ts",{"_index":566,"title":{},"body":{"modules/MemberModule.html":{}}}],["start",{"_index":728,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":731,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":733,"title":{},"body":{"index.html":{}}}],["started",{"_index":709,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":721,"title":{},"body":{"index.html":{}}}],["statements",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":610,"title":{},"body":{"classes/Path.html":{}}}],["status(localizedexception.getstatus",{"_index":292,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["statuscode",{"_index":103,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"classes/BookException.html":{}}}],["stay",{"_index":755,"title":{},"body":{"index.html":{}}}],["store",{"_index":425,"title":{},"body":{"injectables/BookServiceImpl.html":{},"classes/Path.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":10,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"guards/AuthGuard.html":{},"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["string})@isstring()@isoptional",{"_index":512,"title":{},"body":{"classes/GetContentQuery.html":{}}}],["subject",{"_index":796,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":789,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":803,"title":{},"body":{"license.html":{}}}],["super",{"_index":269,"title":{},"body":{"classes/BookException.html":{}}}],["support",{"_index":747,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":832,"title":{},"body":{"modules.html":{}}}],["t",{"_index":265,"title":{},"body":{"classes/BookException.html":{}}}],["table",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":736,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":739,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":738,"title":{},"body":{"index.html":{}}}],["testing",{"_index":535,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["tests",{"_index":735,"title":{},"body":{"index.html":{}}}],["text",{"_index":692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thanks",{"_index":745,"title":{},"body":{"index.html":{}}}],["this._aggregatecontent(query",{"_index":408,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["this._generatetoken(payload._source",{"_index":605,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["this._generatetoken(prepare",{"_index":601,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["this._setquerycontent",{"_index":375,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["this.book.checkout(authorizer.user.id",{"_index":258,"title":{},"body":{"controllers/BookController.html":{}}}],["this.book.createcontent(dto",{"_index":243,"title":{},"body":{"controllers/BookController.html":{}}}],["this.book.createpointsetting(dto",{"_index":245,"title":{},"body":{"controllers/BookController.html":{}}}],["this.book.getcontent(authorizer.user.id",{"_index":251,"title":{},"body":{"controllers/BookController.html":{}}}],["this.book.getlibrary(authorizer.user.id",{"_index":562,"title":{},"body":{"controllers/MemberController.html":{}}}],["this.book.getselectedcontent(authorizer.user.id",{"_index":255,"title":{},"body":{"controllers/BookController.html":{}}}],["this.book.selectcontent(authorizer.user.id",{"_index":253,"title":{},"body":{"controllers/BookController.html":{}}}],["this.book.updatepointsetting(dto",{"_index":247,"title":{},"body":{"controllers/BookController.html":{}}}],["this.cache.get(cachekey",{"_index":426,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["this.cache.set(cachekey",{"_index":427,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["this.code.tostring",{"_index":270,"title":{},"body":{"classes/BookException.html":{}}}],["this.config.get('jwt",{"_index":593,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["this.configservice.get('jwt",{"_index":121,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.elasticsearch.index",{"_index":388,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["this.elasticsearch.search",{"_index":380,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["this.elasticsearch.search(aggregate",{"_index":410,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["this.elasticsearch.updatebyquery",{"_index":392,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["this.jwt.sign",{"_index":594,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["this.jwtservice.verify(token",{"_index":122,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.error(err",{"_index":117,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.logger.error(json.stringify(error",{"_index":600,"title":{},"body":{"injectables/MemberServiceImpl.html":{}}}],["this.logger.error(json.stringify(exception",{"_index":287,"title":{},"body":{"classes/BookExceptionFilter.html":{}}}],["this.member.login(dto",{"_index":556,"title":{},"body":{"controllers/MemberController.html":{}}}],["this.member.me(authorizer.user.id",{"_index":560,"title":{},"body":{"controllers/MemberController.html":{}}}],["this.member.register(dto",{"_index":558,"title":{},"body":{"controllers/MemberController.html":{}}}],["this.payload",{"_index":271,"title":{},"body":{"classes/BookException.html":{}}}],["this.user?.role",{"_index":138,"title":{},"body":{"classes/Authorizer.html":{}}}],["this.verifytoken(token",{"_index":111,"title":{},"body":{"guards/AuthGuard.html":{}}}],["throw",{"_index":102,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["token",{"_index":81,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{}}}],["tort",{"_index":826,"title":{},"body":{"license.html":{}}}],["total",{"_index":421,"title":{},"body":{"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{}}}],["touch",{"_index":756,"title":{},"body":{"index.html":{}}}],["transaction",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transactionhits",{"_index":402,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["transactionhits.hits.flatmap",{"_index":405,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["transformer",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":114,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BookConfigModule.html":{},"controllers/BookController.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{}}}],["true})@apiquery({name",{"_index":209,"title":{},"body":{"controllers/BookController.html":{},"controllers/MemberController.html":{}}}],["true})@arrayminsize(1",{"_index":624,"title":{},"body":{"classes/SelectContentDto.html":{}}}],["true})@bearerauth()@get('library",{"_index":541,"title":{},"body":{"controllers/MemberController.html":{}}}],["true})@bearerauth()@get('list",{"_index":212,"title":{},"body":{"controllers/BookController.html":{}}}],["true})@bearerauth()@get('select",{"_index":215,"title":{},"body":{"controllers/BookController.html":{}}}],["true})@isnumber()@isnotempty",{"_index":505,"title":{},"body":{"classes/ContentDto.html":{}}}],["true})@isstring()@isnotempty",{"_index":501,"title":{},"body":{"classes/ContentDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["try",{"_index":109,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["ttl",{"_index":524,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":761,"title":{},"body":{"index.html":{}}}],["type",{"_index":11,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"controllers/BookController.html":{},"classes/BookException.html":{},"classes/BookExceptionFilter.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IAppConfig.html":{},"interfaces/IContent.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IMember.html":{},"interfaces/IRedisConfig.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITokenPayload.html":{},"interfaces/ITransaction.html":{},"classes/LoginDto.html":{},"controllers/MemberController.html":{},"interfaces/MemberResponse.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":842,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types/lodash",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":720,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":134,"title":{},"body":{"classes/Authorizer.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{}}}],["uniqby",{"_index":364,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["uniqby(flat",{"_index":434,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["unique",{"_index":433,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["unique.some((id",{"_index":436,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["unit",{"_index":734,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":146,"title":{},"body":{"classes/Authorizer.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":841,"title":{},"body":{"properties.html":{}}}],["updatepointsetting",{"_index":184,"title":{},"body":{"controllers/BookController.html":{},"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["updatepointsetting(authorizer",{"_index":222,"title":{},"body":{"controllers/BookController.html":{}}}],["updatepointsetting(dto",{"_index":321,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{}}}],["use",{"_index":785,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":302,"title":{},"body":{"modules/BookModule.html":{},"modules/MemberModule.html":{}}}],["usefactory",{"_index":166,"title":{},"body":{"modules/BookConfigModule.html":{},"modules/BookElasticModule.html":{},"modules/BookJWTTokenModule.html":{},"modules/BookRedisModule.html":{}}}],["user",{"_index":93,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Authorizer.html":{},"injectables/MemberServiceImpl.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":308,"title":{},"body":{"classes/BookService.html":{},"injectables/BookServiceImpl.html":{},"interfaces/ContentResponse.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/MemberService.html":{},"injectables/MemberServiceImpl.html":{}}}],["username",{"_index":19,"title":{},"body":{"interfaces/AccessTokenResponse.html":{},"interfaces/IMember.html":{},"classes/LoginDto.html":{},"interfaces/MemberResponse.html":{},"injectables/MemberServiceImpl.html":{},"classes/RegisterDto.html":{}}}],["uuid",{"_index":362,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{},"dependencies.html":{}}}],["v1",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v4",{"_index":361,"title":{},"body":{"injectables/BookServiceImpl.html":{},"injectables/MemberServiceImpl.html":{}}}],["validator",{"_index":486,"title":{},"body":{"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"classes/GetContentQuery.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"dependencies.html":{}}}],["value",{"_index":277,"title":{},"body":{"classes/BookExceptionFilter.html":{},"injectables/MemberServiceImpl.html":{},"classes/Path.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":443,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["variable",{"_index":638,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":845,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifytoken",{"_index":63,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verifytoken(token",{"_index":79,"title":{},"body":{"guards/AuthGuard.html":{}}}],["version",{"_index":521,"title":{},"body":{"interfaces/IAppConfig.html":{},"interfaces/IElasticConfig.html":{},"interfaces/IJWTConfig.html":{},"interfaces/IRedisConfig.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["video",{"_index":693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibility",{"_index":359,"title":{},"body":{"injectables/BookServiceImpl.html":{},"classes/CheckoutDto.html":{},"classes/ContentDto.html":{},"interfaces/ContentResponse.html":{},"classes/GetContentQuery.html":{},"interfaces/IContent.html":{},"classes/ISelectContent.html":{},"interfaces/ISettingPoint.html":{},"interfaces/ITransaction.html":{},"classes/SelectContentDto.html":{},"classes/SettingPointDto.html":{},"miscellaneous/enumerations.html":{}}}],["visibility.publish",{"_index":371,"title":{},"body":{"injectables/BookServiceImpl.html":{}}}],["visibility})@isstring()@isnotempty()@isenum(visibility",{"_index":507,"title":{},"body":{"classes/ContentDto.html":{}}}],["warranties",{"_index":810,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":806,"title":{},"body":{"license.html":{}}}],["watch",{"_index":729,"title":{},"body":{"index.html":{}}}],["website",{"_index":759,"title":{},"body":{"index.html":{}}}],["whether",{"_index":823,"title":{},"body":{"license.html":{}}}],["without",{"_index":780,"title":{},"body":{"license.html":{}}}],["you'd",{"_index":750,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/BookModule.html":{},"modules/MemberModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AccessTokenResponse.html":{"url":"interfaces/AccessTokenResponse.html","title":"interface - AccessTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AccessTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './member.enum';\n\nexport interface IMember {\n    id: string;\n    username: string;\n    password: string;\n    displayName: string;\n    point?: number;\n    role: Role;\n}\nexport interface MemberResponse {\n    id: string;\n    username: string;\n    displayName: string;\n    point?: number;\n    role: Role;\n}\n\nexport interface AccessTokenResponse {\n    accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBookConfigModule\n\nBookConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookConfigModule->AppModule\n\n\n\n\n\nBookJWTTokenModule\n\nBookJWTTokenModule\n\nAppModule -->\n\nBookJWTTokenModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nMemberModule\n\nMemberModule\n\nAppModule -->\n\nMemberModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            BookController\n                        \n                        \n                            MemberController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BookConfigModule\n                        \n                        \n                            BookJWTTokenModule\n                        \n                        \n                            BookModule\n                        \n                        \n                            MemberModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BookModule } from '@services/book';\nimport { BookConfigModule, BookJWTTokenModule } from './commons/modules';\nimport { BookController } from './controllers/book.controller';\nimport { MemberController } from './controllers/member.controller';\nimport { MemberModule } from '@services/member';\n\n@Module({\n    imports: [BookConfigModule, BookModule, MemberModule, BookJWTTokenModule],\n    controllers: [BookController, MemberController],\n    providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/commons/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                verifyToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/commons/guards/auth.guard.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commons/guards/auth.guard.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        verifyToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/commons/guards/auth.guard.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ITokenPayload\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    HttpException,\n    HttpStatus,\n    Injectable,\n    Logger,\n} from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { FastifyRequest } from 'fastify';\nimport { IJWTConfig, ITokenPayload } from '@commons/interfaces';\n\ntype AuthRequest = FastifyRequest & {\n    $user: ITokenPayload;\n};\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    private readonly logger = new Logger(AuthGuard.name);\n\n    constructor(private jwtService: JwtService, private configService: ConfigService) {}\n\n    async canActivate(context: ExecutionContext): Promise {\n        const request = context.switchToHttp().getRequest();\n        const token = request.headers.authorization?.replace(/^bearer /i, '');\n        if (!token)\n            throw new HttpException(\n                {\n                    statusCode: HttpStatus.UNAUTHORIZED,\n                    message: 'Missing authorization header',\n                },\n                HttpStatus.UNAUTHORIZED,\n            );\n        try {\n            const payload = this.verifyToken(token);\n\n            request.$user = payload;\n            return true;\n        } catch (err) {\n            this.logger.error(err);\n            throw new HttpException(\n                {\n                    statusCode: HttpStatus.UNAUTHORIZED,\n                    message: 'Invalid token or expired',\n                },\n                HttpStatus.UNAUTHORIZED,\n            );\n        }\n    }\n\n    private verifyToken(token: string): ITokenPayload {\n        const { jwtSecret } = this.configService.get('jwt');\n\n        return this.jwtService.verify(token, {\n            secret: jwtSecret,\n        });\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Authorizer.html":{"url":"classes/Authorizer.html","title":"class - Authorizer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Authorizer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/decorators/user.decorator.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestAccessForAdmin\n                            \n                            \n                                requestAccessForMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: ITokenPayload)\n                    \n                \n                        \n                            \n                                Defined in src/commons/decorators/user.decorator.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        ITokenPayload\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ITokenPayload\n\n                    \n                \n                    \n                        \n                                Defined in src/commons/decorators/user.decorator.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        requestAccessForAdmin\n                        \n                    \n                \n            \n            \n                \nrequestAccessForAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/commons/decorators/user.decorator.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestAccessForMember\n                        \n                    \n                \n            \n            \n                \nrequestAccessForMember()\n                \n            \n\n\n            \n                \n                    Defined in src/commons/decorators/user.decorator.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     undefined\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, createParamDecorator, HttpException, HttpStatus } from '@nestjs/common';\nimport { ITokenPayload } from '@commons/interfaces';\nimport { Role } from '@services/member';\n\nexport class Authorizer {\n    constructor(public user: ITokenPayload) {}\n\n    requestAccessForAdmin(): undefined {\n        if (this.user?.role === Role.ADMIN) return;\n\n        throw new HttpException(\n            {\n                statusCode: HttpStatus.FORBIDDEN,\n                message: 'Forbidden',\n            },\n            HttpStatus.FORBIDDEN,\n        );\n    }\n\n    requestAccessForMember(): undefined {\n        if (this.user?.role === Role.MEMBER) return;\n\n        throw new HttpException(\n            {\n                statusCode: HttpStatus.FORBIDDEN,\n                message: 'Forbidden',\n            },\n            HttpStatus.FORBIDDEN,\n        );\n    }\n}\nexport const Auth = createParamDecorator(async (_: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.$user;\n\n    return new Authorizer(user);\n});\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookConfigModule.html":{"url":"modules/BookConfigModule.html","title":"module - BookConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    BookConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commons/modules/module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { appConfig, elasticConfig, jwtConfig, redisConfig } from '../../configs';\nimport { CacheModule, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ElasticsearchModule } from '@nestjs/elasticsearch';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getElasticModuleOptions, getJWTModuleOptions, getRedisModuleOptions } from './factory';\n\n@Module({\n    imports: [\n        ElasticsearchModule.registerAsync({\n            useFactory: getElasticModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [ElasticsearchModule],\n})\nexport class BookElasticModule {}\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [appConfig, elasticConfig, jwtConfig, redisConfig],\n            isGlobal: true,\n        }),\n    ],\n    exports: [ConfigModule],\n})\nexport class BookConfigModule {}\n\n@Module({\n    imports: [\n        JwtModule.registerAsync({\n            useFactory: getJWTModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [JwtModule],\n})\nexport class BookJWTTokenModule {}\n\n@Module({\n    imports: [\n        CacheModule.registerAsync({\n            useFactory: getRedisModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [CacheModule],\n})\nexport class BookRedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BookController.html":{"url":"controllers/BookController.html","title":"controller - BookController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BookController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/book.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                    Async\n                                createContent\n                            \n                            \n                                    Async\n                                createPointSetting\n                            \n                            \n                                    Async\n                                getContent\n                            \n                            \n                                    Async\n                                getSelectedContent\n                            \n                            \n                                    Async\n                                selectContent\n                            \n                            \n                                    Async\n                                updatePointSetting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkout(authorizer: Authorizer, dto: CheckoutDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BearerAuth()@Post('checkout')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CheckoutDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createContent(authorizer: Authorizer, dto: ContentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BearerAuth()@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                ContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPointSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPointSetting(authorizer: Authorizer, dto: SettingPointDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BearerAuth()@Post('setting-point')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                SettingPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContent(authorizer: Authorizer, query: GetContentQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'search', type: String, required: false})@ApiQuery({name: 'page', type: Number, example: 1, required: true})@ApiQuery({name: 'size', type: Number, example: 5, required: true})@BearerAuth()@Get('list')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSelectedContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedContent(authorizer: Authorizer, query: GetContentQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'search', type: String, required: false})@ApiQuery({name: 'page', type: Number, example: 1, required: true})@ApiQuery({name: 'size', type: Number, example: 5, required: true})@BearerAuth()@Get('select-content')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        selectContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectContent(authorizer: Authorizer, dto: SelectContentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BearerAuth()@Post('select-content')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                SelectContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePointSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePointSetting(authorizer: Authorizer, dto: SettingPointDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BearerAuth()@Put('setting-point')\n                \n            \n\n            \n                \n                    Defined in src/controllers/book.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                SettingPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    BookService,\n    CheckoutDto,\n    ContentDto,\n    ContentResponse,\n    GetContentQuery,\n    SelectContentDto,\n    SettingPointDto,\n} from '@services/book';\nimport { Body, Controller, Get, Post, Put, Query } from '@nestjs/common';\nimport { Auth, Authorizer, BearerAuth } from '../commons/decorators';\nimport { ApiQuery, ApiTags } from '@nestjs/swagger';\n\n@Controller({ path: 'books' })\n@ApiTags('Book')\nexport class BookController {\n    constructor(private book: BookService) {}\n\n    @BearerAuth()\n    @Post('create')\n    async createContent(@Auth() authorizer: Authorizer, @Body() dto: ContentDto): Promise {\n        authorizer.requestAccessForAdmin();\n        await this.book.createContent(dto);\n    }\n\n    @BearerAuth()\n    @Post('setting-point')\n    async createPointSetting(\n        @Auth() authorizer: Authorizer,\n        @Body() dto: SettingPointDto,\n    ): Promise {\n        authorizer.requestAccessForAdmin();\n        await this.book.createPointSetting(dto);\n    }\n\n    @BearerAuth()\n    @Put('setting-point')\n    async updatePointSetting(\n        @Auth() authorizer: Authorizer,\n        @Body() dto: SettingPointDto,\n    ): Promise {\n        authorizer.requestAccessForAdmin();\n        await this.book.updatePointSetting(dto);\n    }\n\n    @ApiQuery({ name: 'search', type: String, required: false })\n    @ApiQuery({ name: 'page', type: Number, example: 1, required: true })\n    @ApiQuery({ name: 'size', type: Number, example: 5, required: true })\n    @BearerAuth()\n    @Get('list')\n    async getContent(\n        @Auth() authorizer: Authorizer,\n        @Query() query: GetContentQuery,\n    ): Promise {\n        authorizer.requestAccessForMember();\n        return this.book.getContent(authorizer.user.id, query);\n    }\n\n    @BearerAuth()\n    @Post('select-content')\n    async selectContent(\n        @Auth() authorizer: Authorizer,\n        @Body() dto: SelectContentDto,\n    ): Promise {\n        authorizer.requestAccessForMember();\n\n        return this.book.selectContent(authorizer.user.id, dto);\n    }\n\n    @ApiQuery({ name: 'search', type: String, required: false })\n    @ApiQuery({ name: 'page', type: Number, example: 1, required: true })\n    @ApiQuery({ name: 'size', type: Number, example: 5, required: true })\n    @BearerAuth()\n    @Get('select-content')\n    async getSelectedContent(\n        @Auth() authorizer: Authorizer,\n        @Query() query: GetContentQuery,\n    ): Promise {\n        authorizer.requestAccessForMember();\n\n        return this.book.getSelectedContent(authorizer.user.id, query);\n    }\n\n    @BearerAuth()\n    @Post('checkout')\n    async checkout(@Auth() authorizer: Authorizer, @Body() dto: CheckoutDto): Promise {\n        authorizer.requestAccessForMember();\n\n        return this.book.checkout(authorizer.user.id, dto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookElasticModule.html":{"url":"modules/BookElasticModule.html","title":"module - BookElasticModule","body":"\n                   \n\n\n\n\n    Modules\n    BookElasticModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commons/modules/module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { appConfig, elasticConfig, jwtConfig, redisConfig } from '../../configs';\nimport { CacheModule, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ElasticsearchModule } from '@nestjs/elasticsearch';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getElasticModuleOptions, getJWTModuleOptions, getRedisModuleOptions } from './factory';\n\n@Module({\n    imports: [\n        ElasticsearchModule.registerAsync({\n            useFactory: getElasticModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [ElasticsearchModule],\n})\nexport class BookElasticModule {}\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [appConfig, elasticConfig, jwtConfig, redisConfig],\n            isGlobal: true,\n        }),\n    ],\n    exports: [ConfigModule],\n})\nexport class BookConfigModule {}\n\n@Module({\n    imports: [\n        JwtModule.registerAsync({\n            useFactory: getJWTModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [JwtModule],\n})\nexport class BookJWTTokenModule {}\n\n@Module({\n    imports: [\n        CacheModule.registerAsync({\n            useFactory: getRedisModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [CacheModule],\n})\nexport class BookRedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookException.html":{"url":"classes/BookException.html","title":"class - BookException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/exceptions/exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLocalizedException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(code: HttpStatus, payload: T)\n                    \n                \n                        \n                            \n                                Defined in src/commons/exceptions/exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        code\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLocalizedException\n                        \n                    \n                \n            \n            \n                \ngetLocalizedException()\n                \n            \n\n\n            \n                \n                    Defined in src/commons/exceptions/exception.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HttpException\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class BookException extends Error {\n    constructor(private code: HttpStatus, private payload: T) {\n        super();\n    }\n\n    getLocalizedException(): HttpException {\n        return new HttpException(\n            {\n                statusCode: this.code.toString(),\n                message: this.payload,\n            },\n            Number(this.code),\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookExceptionFilter.html":{"url":"classes/BookExceptionFilter.html","title":"class - BookExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/exceptions/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BookExceptionFilter.name)\n                    \n                \n                    \n                        \n                                Defined in src/commons/exceptions/exception.filter.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BookException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/commons/exceptions/exception.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                BookException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     FastifyReply\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, Logger } from '@nestjs/common';\nimport { BookException } from './exception';\nimport { FastifyReply } from 'fastify';\n\n@Catch(BookException)\nexport class BookExceptionFilter implements ExceptionFilter {\n    private logger = new Logger(BookExceptionFilter.name);\n\n    catch(exception: BookException, host: ArgumentsHost): FastifyReply {\n        this.logger.error(JSON.stringify(exception));\n\n        const ctx = host.switchToHttp();\n        const localizedException = exception.getLocalizedException();\n\n        return ctx\n            .getResponse()\n            .status(localizedException.getStatus())\n            .send(localizedException.getResponse());\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookJWTTokenModule.html":{"url":"modules/BookJWTTokenModule.html","title":"module - BookJWTTokenModule","body":"\n                   \n\n\n\n\n    Modules\n    BookJWTTokenModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commons/modules/module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { appConfig, elasticConfig, jwtConfig, redisConfig } from '../../configs';\nimport { CacheModule, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ElasticsearchModule } from '@nestjs/elasticsearch';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getElasticModuleOptions, getJWTModuleOptions, getRedisModuleOptions } from './factory';\n\n@Module({\n    imports: [\n        ElasticsearchModule.registerAsync({\n            useFactory: getElasticModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [ElasticsearchModule],\n})\nexport class BookElasticModule {}\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [appConfig, elasticConfig, jwtConfig, redisConfig],\n            isGlobal: true,\n        }),\n    ],\n    exports: [ConfigModule],\n})\nexport class BookConfigModule {}\n\n@Module({\n    imports: [\n        JwtModule.registerAsync({\n            useFactory: getJWTModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [JwtModule],\n})\nexport class BookJWTTokenModule {}\n\n@Module({\n    imports: [\n        CacheModule.registerAsync({\n            useFactory: getRedisModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [CacheModule],\n})\nexport class BookRedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookModule.html":{"url":"modules/BookModule.html","title":"module - BookModule","body":"\n                   \n\n\n\n\n    Modules\n    BookModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BookModule\n\n\n\ncluster_BookModule_exports\n\n\n\ncluster_BookModule_imports\n\n\n\n\nBookElasticModule\n\nBookElasticModule\n\n\n\nBookModule\n\nBookModule\n\nBookModule -->\n\nBookElasticModule->BookModule\n\n\n\n\n\nBookRedisModule\n\nBookRedisModule\n\nBookModule -->\n\nBookRedisModule->BookModule\n\n\n\n\n\nBookService \n\nBookService \n\nBookService  -->\n\nBookModule->BookService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/book/book.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BookElasticModule\n                        \n                        \n                            BookRedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BookService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BookElasticModule, BookRedisModule } from '../../commons/modules';\nimport { Module } from '@nestjs/common';\nimport { BookService } from './book.abstract';\nimport { BookServiceImpl } from './book.implement';\n\n@Module({\n    imports: [BookElasticModule, BookRedisModule],\n    providers: [\n        {\n            provide: BookService,\n            useClass: BookServiceImpl,\n        },\n    ],\n    exports: [BookService],\n})\nexport class BookModule {}\n\nexport { BookService };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BookRedisModule.html":{"url":"modules/BookRedisModule.html","title":"module - BookRedisModule","body":"\n                   \n\n\n\n\n    Modules\n    BookRedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commons/modules/module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { appConfig, elasticConfig, jwtConfig, redisConfig } from '../../configs';\nimport { CacheModule, Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ElasticsearchModule } from '@nestjs/elasticsearch';\nimport { JwtModule } from '@nestjs/jwt';\nimport { getElasticModuleOptions, getJWTModuleOptions, getRedisModuleOptions } from './factory';\n\n@Module({\n    imports: [\n        ElasticsearchModule.registerAsync({\n            useFactory: getElasticModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [ElasticsearchModule],\n})\nexport class BookElasticModule {}\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            load: [appConfig, elasticConfig, jwtConfig, redisConfig],\n            isGlobal: true,\n        }),\n    ],\n    exports: [ConfigModule],\n})\nexport class BookConfigModule {}\n\n@Module({\n    imports: [\n        JwtModule.registerAsync({\n            useFactory: getJWTModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [JwtModule],\n})\nexport class BookJWTTokenModule {}\n\n@Module({\n    imports: [\n        CacheModule.registerAsync({\n            useFactory: getRedisModuleOptions,\n            inject: [ConfigService],\n        }),\n    ],\n    exports: [CacheModule],\n})\nexport class BookRedisModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookService.html":{"url":"classes/BookService.html","title":"class - BookService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                checkout\n                            \n                            \n                                    Abstract\n                                createContent\n                            \n                            \n                                    Abstract\n                                createPointSetting\n                            \n                            \n                                    Abstract\n                                getContent\n                            \n                            \n                                    Abstract\n                                getLibrary\n                            \n                            \n                                    Abstract\n                                getSelectedContent\n                            \n                            \n                                    Abstract\n                                selectContent\n                            \n                            \n                                    Abstract\n                                updatePointSetting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkout(userId: string, dto: CheckoutDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CheckoutDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createContent(dto: ContentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        createPointSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPointSetting(dto: SettingPointDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SettingPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContent(userId: string, query: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLibrary(userId: string, query: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getSelectedContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedContent(userId: string, query: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        selectContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectContent(userId: string, dto: SelectContentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                SelectContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        updatePointSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePointSetting(dto: SettingPointDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.abstract.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SettingPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    CheckoutDto,\n    ContentDto,\n    GetContentQuery,\n    SelectContentDto,\n    SettingPointDto,\n} from './book.dto';\nimport { ContentResponse } from './book.interface';\n\nexport abstract class BookService {\n    abstract createPointSetting(dto: SettingPointDto): Promise;\n    abstract updatePointSetting(dto: SettingPointDto): Promise;\n    abstract createContent(dto: ContentDto): Promise;\n    abstract getContent(userId: string, query: GetContentQuery): Promise;\n    abstract selectContent(userId: string, dto: SelectContentDto): Promise;\n    abstract getSelectedContent(userId: string, query: GetContentQuery): Promise;\n    abstract checkout(userId: string, dto: CheckoutDto): Promise;\n    abstract getLibrary(userId: string, query: GetContentQuery): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookServiceImpl.html":{"url":"injectables/BookServiceImpl.html","title":"injectable - BookServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.implement.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _aggregateContent\n                            \n                            \n                                    Private\n                                _setQueryContent\n                            \n                            \n                                    Async\n                                checkout\n                            \n                            \n                                    Async\n                                createContent\n                            \n                            \n                                    Async\n                                createPointSetting\n                            \n                            \n                                    Async\n                                getContent\n                            \n                            \n                                    Async\n                                getLibrary\n                            \n                            \n                                    Async\n                                getSelectedContent\n                            \n                            \n                                    Async\n                                selectContent\n                            \n                            \n                                    Async\n                                updatePointSetting\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elasticsearch: ElasticsearchService, cache: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/modules/book/book.implement.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elasticsearch\n                                                  \n                                                        \n                                                                    ElasticsearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _aggregateContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _aggregateContent(undefined: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SearchRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _setQueryContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    _setQueryContent(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     QueryDslQueryContainer[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkout\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkout(userId: string, dto: CheckoutDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:213\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CheckoutDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    createContent(dto: ContentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                ContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createPointSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPointSetting(dto: SettingPointDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SettingPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContent(userId: string, query: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLibrary(userId: string, query: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSelectedContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSelectedContent(userId: string, query: GetContentQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        selectContent\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectContent(userId: string, dto: SelectContentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                SelectContentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePointSetting\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePointSetting(dto: SettingPointDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/book/book.implement.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                SettingPointDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IndexPath } from '../../commons/enums';\nimport { BookException } from '../../commons/exceptions';\n\nimport {\n    ContentResponse,\n    IContent,\n    ISelectContent,\n    ISettingPoint,\n    ITransaction,\n} from './book.interface';\nimport {\n    CheckoutDto,\n    ContentDto,\n    GetContentQuery,\n    SelectContentDto,\n    SettingPointDto,\n} from './book.dto';\n\nimport { CACHE_MANAGER, HttpStatus, Inject, Injectable } from '@nestjs/common';\n\nimport { ElasticsearchService } from '@nestjs/elasticsearch';\nimport { BookService } from './book.abstract';\nimport { PaymentMethod, PointEnabled, Visibility } from './book.enum';\n\nimport { v4 } from 'uuid';\nimport { Cache } from 'cache-manager';\nimport { uniqBy } from 'lodash';\nimport { IMember } from '../member';\nimport { QueryDslQueryContainer, SearchRequest } from '@elastic/elasticsearch/lib/api/types';\n\n@Injectable()\nexport class BookServiceImpl implements BookService {\n    constructor(\n        private readonly elasticsearch: ElasticsearchService,\n        @Inject(CACHE_MANAGER) private readonly cache: Cache,\n    ) {}\n\n    private _setQueryContent({ search }: { search: string }): QueryDslQueryContainer[] {\n        const query: QueryDslQueryContainer[] = [];\n\n        if (search) query.push({ match: { name: search } });\n\n        query.push({ match: { visibility: Visibility.PUBLISH } });\n\n        return query;\n    }\n\n    private _aggregateContent({ search, size, page }: GetContentQuery): SearchRequest {\n        const aggregate: SearchRequest = {\n            index: IndexPath.Content,\n            query: {\n                bool: {\n                    must: this._setQueryContent({ search }) ?? [],\n                },\n            },\n        };\n\n        if (size) aggregate.size = size;\n        if (page) aggregate.from = (Number(page) - 1) * size;\n\n        return aggregate;\n    }\n\n    async createPointSetting(dto: SettingPointDto): Promise {\n        try {\n            const {\n                hits: { hits },\n            } = await this.elasticsearch.search({\n                index: IndexPath.SettingPoint,\n                query: { match_all: {} },\n            });\n\n            const [payload] = hits;\n\n            if (payload)\n                throw new BookException(\n                    HttpStatus.BAD_REQUEST,\n                    'Setting is existing. Please try again.',\n                );\n\n            await this.elasticsearch.index({\n                index: IndexPath.SettingPoint,\n                id: v4(),\n                document: dto,\n            });\n        } catch (error) {\n            if (error.statusCode !== 404) throw error;\n\n            await this.elasticsearch.index({\n                index: IndexPath.SettingPoint,\n                id: v4(),\n                document: dto,\n            });\n        }\n    }\n\n    async updatePointSetting(dto: SettingPointDto): Promise {\n        try {\n            await this.elasticsearch.updateByQuery({\n                index: IndexPath.Member,\n                query: { match_all: {} },\n                script: {\n                    lang: 'painless',\n                    source: `ctx._source[\"enabled\"] = params.enabled; ctx._source[\"oneTo\"] = params.oneTo;`,\n                    params: dto,\n                },\n            });\n        } catch (error) {\n            throw error;\n        }\n    }\n\n    async createContent(dto: ContentDto): Promise {\n        await this.elasticsearch.index({\n            index: IndexPath.Content,\n            id: v4(),\n            document: dto,\n        });\n    }\n\n    async getContent(userId: string, query: GetContentQuery): Promise {\n        const { hits: transactionHits } = await this.elasticsearch.search({\n            index: IndexPath.Transaction,\n            query: {\n                bool: { must: { match: { userId } } },\n            },\n        });\n\n        const contentIds = transactionHits.hits.flatMap(({ _source }) => _source.contentId);\n\n        const aggregate = this._aggregateContent(query);\n\n        const { hits: contentHits } = await this.elasticsearch.search(aggregate);\n\n        const contents = contentHits.hits\n            .map((hit) => ({ id: hit._id, ...hit._source }))\n            .filter(({ id }) => !contentIds.includes(id));\n        return {\n            page: +query.page,\n            count: query.page * query.size,\n            total: contents.length,\n            payload: contents,\n        };\n    }\n\n    async selectContent(userId: string, dto: SelectContentDto): Promise {\n        const cacheKey = `${userId}-cart`;\n\n        let store = await this.cache.get(cacheKey);\n        if (!store) await this.cache.set(cacheKey, JSON.stringify(dto));\n\n        store = await this.cache.get(cacheKey);\n\n        const { contentId }: ISelectContent = JSON.parse(store as string);\n\n        const flat = [contentId ?? [], dto.contentId].flatMap((id) => id);\n\n        const unique = uniqBy(flat, 2);\n\n        const { hits: transactionHits } = await this.elasticsearch.search({\n            index: IndexPath.Transaction,\n            query: {\n                bool: { must: { match: { userId } } },\n            },\n        });\n\n        const contentIds = transactionHits.hits.flatMap(({ _source }) => _source.contentId);\n\n        if (unique.some((id) => contentIds.includes(id)))\n            throw new BookException(HttpStatus.BAD_REQUEST, 'Content is already owner.');\n\n        await this.cache.set(cacheKey, JSON.stringify({ contentId: unique }));\n    }\n\n    async getSelectedContent(userId: string, query: GetContentQuery): Promise {\n        const cacheKey = `${userId}-cart`;\n\n        const store = await this.cache.get(cacheKey);\n\n        if (!store)\n            return {\n                page: +query.page,\n                count: query.page * query.size,\n                total: 0,\n                payload: [],\n            };\n\n        const { contentId }: ISelectContent = JSON.parse(store as string);\n\n        const { hits: contentHits } = await this.elasticsearch.search({\n            index: IndexPath.Content,\n            query: {\n                bool: {\n                    must: [{ match: { visibility: Visibility.PUBLISH } }],\n                    filter: { ids: { values: contentId } },\n                },\n            },\n        });\n\n        const contents = contentHits.hits.map((hit) => ({\n            id: hit._id,\n            ...hit._source,\n        }));\n\n        return {\n            page: +query.page,\n            count: query.page * query.size,\n            total: contents.length,\n            payload: contents,\n        };\n    }\n\n    async checkout(userId: string, dto: CheckoutDto): Promise {\n        const cacheKey = `${userId}-cart`;\n        const store = await this.cache.get(cacheKey);\n        if (!store)\n            throw new BookException(HttpStatus.NOT_FOUND, 'Cart is empty. Please check again');\n\n        const { contentId }: ISelectContent = JSON.parse(store as string);\n\n        const { hits: memberHits } = await this.elasticsearch.search({\n            index: IndexPath.Member,\n            query: {\n                bool: {\n                    filter: { ids: { values: userId } },\n                },\n            },\n        });\n        const [{ _source: sourceMember }] = memberHits.hits;\n        if (!sourceMember) throw new BookException(HttpStatus.NOT_FOUND, 'Member not found');\n\n        const { hits: contentHits } = await this.elasticsearch.search({\n            index: IndexPath.Content,\n            query: {\n                bool: {\n                    must: [{ match: { visibility: Visibility.PUBLISH } }],\n                    filter: { ids: { values: contentId } },\n                },\n            },\n        });\n\n        const contents = contentHits.hits.map((hit) => {\n            return { id: hit._id, ...hit._source };\n        });\n\n        const balance = contents.reduce((previousValue, { price }) => previousValue + price, 0);\n\n        const prepare = {\n            balance,\n            contentId,\n            userId,\n            paymentMethod: dto.method,\n        };\n\n        const { hits: settingHits } = await this.elasticsearch.search({\n            index: IndexPath.SettingPoint,\n            query: { match_all: {} },\n        });\n\n        const [hits] = settingHits.hits;\n\n        const sourceSetting = hits?._source;\n\n        if (dto.method === PaymentMethod.Point) {\n            if (sourceSetting?.enabled === PointEnabled.ACTIVE) {\n                const deductPoint = sourceMember.point - balance;\n\n                if (deductPoint  {\n        const { hits: transactionHits } = await this.elasticsearch.search({\n            index: IndexPath.Transaction,\n            query: { bool: { must: { match: { userId } } } },\n        });\n\n        const contentIds = transactionHits.hits.flatMap(({ _source }) => _source.contentId);\n\n        const aggregate = this._aggregateContent(query);\n\n        aggregate.query.bool.filter = { ids: { values: contentIds } };\n\n        const { hits: contentHits } = await this.elasticsearch.search(aggregate);\n\n        const contents = contentHits.hits.map((hit) => ({\n            id: hit._id,\n            ...hit._source,\n        }));\n\n        return {\n            page: +query.page,\n            count: query.page * query.size,\n            total: contents.length,\n            payload: contents,\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CheckoutDto.html":{"url":"classes/CheckoutDto.html","title":"class - CheckoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CheckoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                method\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'method', example: 'example', required: true, enum: PaymentMethod})@IsString()@IsNotEmpty()@IsEnum(PaymentMethod)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:90\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from '@services/book';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n    ArrayMinSize,\n    ArrayNotEmpty,\n    IsArray,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsNumberString,\n    IsOptional,\n    IsString,\n    IsUUID,\n    Min,\n} from 'class-validator';\n\nexport class ContentDto {\n    @ApiProperty({\n        name: 'name',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({\n        name: 'description',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({\n        name: 'author',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    author: string;\n\n    @ApiProperty({\n        name: 'price',\n        example: 100,\n        required: true,\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    price: number;\n\n    @ApiProperty({\n        name: 'visibility',\n        example: 'example',\n        required: true,\n        enum: Visibility,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(Visibility)\n    visibility: Visibility;\n}\n\nexport class SelectContentDto {\n    @ApiProperty({\n        name: 'contentId',\n        example: ['example'],\n        required: true,\n        type: Array,\n    })\n    @IsArray()\n    @ArrayNotEmpty()\n    @IsUUID('all', { each: true })\n    @ArrayMinSize(1)\n    contentId: string[];\n}\n\nexport class CheckoutDto {\n    @ApiProperty({\n        name: 'method',\n        example: 'example',\n        required: true,\n        enum: PaymentMethod,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PaymentMethod)\n    method: PaymentMethod;\n}\n\nexport class SettingPointDto {\n    @ApiProperty({\n        name: 'enabled',\n        example: 'active',\n        required: true,\n        enum: PointEnabled,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PointEnabled)\n    enabled: PointEnabled;\n\n    @ApiProperty({\n        name: 'oneTo',\n        example: 1,\n        required: true,\n        type: Number,\n    })\n    @IsNumber()\n    @Min(1)\n    @IsNotEmpty()\n    oneTo: number;\n}\n\nexport class GetContentQuery {\n    @ApiProperty({\n        name: 'search',\n        example: 'example',\n        type: String,\n    })\n    @IsString()\n    @IsOptional()\n    search?: string;\n\n    @ApiProperty({\n        name: 'size',\n        example: 5,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    size: number;\n\n    @ApiProperty({\n        name: 'page',\n        example: 1,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    page: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentDto.html":{"url":"classes/ContentDto.html","title":"class - ContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                visibility\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'author', example: 'example', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'description', example: 'example', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'name', example: 'example', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'price', example: 100, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visibility\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Visibility\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'visibility', example: 'example', required: true, enum: Visibility})@IsString()@IsNotEmpty()@IsEnum(Visibility)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from '@services/book';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n    ArrayMinSize,\n    ArrayNotEmpty,\n    IsArray,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsNumberString,\n    IsOptional,\n    IsString,\n    IsUUID,\n    Min,\n} from 'class-validator';\n\nexport class ContentDto {\n    @ApiProperty({\n        name: 'name',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({\n        name: 'description',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({\n        name: 'author',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    author: string;\n\n    @ApiProperty({\n        name: 'price',\n        example: 100,\n        required: true,\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    price: number;\n\n    @ApiProperty({\n        name: 'visibility',\n        example: 'example',\n        required: true,\n        enum: Visibility,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(Visibility)\n    visibility: Visibility;\n}\n\nexport class SelectContentDto {\n    @ApiProperty({\n        name: 'contentId',\n        example: ['example'],\n        required: true,\n        type: Array,\n    })\n    @IsArray()\n    @ArrayNotEmpty()\n    @IsUUID('all', { each: true })\n    @ArrayMinSize(1)\n    contentId: string[];\n}\n\nexport class CheckoutDto {\n    @ApiProperty({\n        name: 'method',\n        example: 'example',\n        required: true,\n        enum: PaymentMethod,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PaymentMethod)\n    method: PaymentMethod;\n}\n\nexport class SettingPointDto {\n    @ApiProperty({\n        name: 'enabled',\n        example: 'active',\n        required: true,\n        enum: PointEnabled,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PointEnabled)\n    enabled: PointEnabled;\n\n    @ApiProperty({\n        name: 'oneTo',\n        example: 1,\n        required: true,\n        type: Number,\n    })\n    @IsNumber()\n    @Min(1)\n    @IsNotEmpty()\n    oneTo: number;\n}\n\nexport class GetContentQuery {\n    @ApiProperty({\n        name: 'search',\n        example: 'example',\n        type: String,\n    })\n    @IsString()\n    @IsOptional()\n    search?: string;\n\n    @ApiProperty({\n        name: 'size',\n        example: 5,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    size: number;\n\n    @ApiProperty({\n        name: 'page',\n        example: 1,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    page: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentResponse.html":{"url":"interfaces/ContentResponse.html","title":"interface - ContentResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            count\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:         IContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from './book.enum';\n\nexport interface IContent {\n    id?: string;\n    name: string;\n    description: string;\n    author: string;\n    price: number;\n    visibility: Visibility;\n}\n\nexport class ISelectContent {\n    contentId: string[];\n}\n\nexport interface ISettingPoint {\n    enabled: PointEnabled;\n    oneTo: number;\n}\n\nexport interface ITransaction {\n    balance: number;\n    contentId: string[];\n    userId: string;\n    paymentMethod: PaymentMethod;\n}\n\nexport interface ContentResponse {\n    page: number;\n    count: number;\n    total: number;\n    payload: IContent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetContentQuery.html":{"url":"classes/GetContentQuery.html","title":"class - GetContentQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetContentQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                page\n                            \n                            \n                                    Optional\n                                search\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'page', example: 1, type: Number})@IsNumberString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:143\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        search\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'search', example: 'example', type: String})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'size', example: 5, type: Number})@IsNumberString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:134\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from '@services/book';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n    ArrayMinSize,\n    ArrayNotEmpty,\n    IsArray,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsNumberString,\n    IsOptional,\n    IsString,\n    IsUUID,\n    Min,\n} from 'class-validator';\n\nexport class ContentDto {\n    @ApiProperty({\n        name: 'name',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({\n        name: 'description',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({\n        name: 'author',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    author: string;\n\n    @ApiProperty({\n        name: 'price',\n        example: 100,\n        required: true,\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    price: number;\n\n    @ApiProperty({\n        name: 'visibility',\n        example: 'example',\n        required: true,\n        enum: Visibility,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(Visibility)\n    visibility: Visibility;\n}\n\nexport class SelectContentDto {\n    @ApiProperty({\n        name: 'contentId',\n        example: ['example'],\n        required: true,\n        type: Array,\n    })\n    @IsArray()\n    @ArrayNotEmpty()\n    @IsUUID('all', { each: true })\n    @ArrayMinSize(1)\n    contentId: string[];\n}\n\nexport class CheckoutDto {\n    @ApiProperty({\n        name: 'method',\n        example: 'example',\n        required: true,\n        enum: PaymentMethod,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PaymentMethod)\n    method: PaymentMethod;\n}\n\nexport class SettingPointDto {\n    @ApiProperty({\n        name: 'enabled',\n        example: 'active',\n        required: true,\n        enum: PointEnabled,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PointEnabled)\n    enabled: PointEnabled;\n\n    @ApiProperty({\n        name: 'oneTo',\n        example: 1,\n        required: true,\n        type: Number,\n    })\n    @IsNumber()\n    @Min(1)\n    @IsNotEmpty()\n    oneTo: number;\n}\n\nexport class GetContentQuery {\n    @ApiProperty({\n        name: 'search',\n        example: 'example',\n        type: String,\n    })\n    @IsString()\n    @IsOptional()\n    search?: string;\n\n    @ApiProperty({\n        name: 'size',\n        example: 5,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    size: number;\n\n    @ApiProperty({\n        name: 'page',\n        example: 1,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    page: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAppConfig.html":{"url":"interfaces/IAppConfig.html","title":"interface - IAppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/interfaces/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apiPrefix\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nodeEnv\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            prefix\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiPrefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apiPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nodeEnv\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nodeEnv:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAppConfig {\n    nodeEnv: string;\n    name: string;\n    apiPrefix: string;\n    prefix: string;\n    version: string;\n    port: number;\n}\n\nexport interface IJWTConfig {\n    jwtSecret: string;\n    accessTokenExpiration: string;\n}\n\nexport interface IRedisConfig {\n    host: string;\n    port: string;\n    ttl: number;\n}\nexport interface IElasticConfig {\n    node: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IContent.html":{"url":"interfaces/IContent.html","title":"interface - IContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            visibility\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visibility:         Visibility\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Visibility\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from './book.enum';\n\nexport interface IContent {\n    id?: string;\n    name: string;\n    description: string;\n    author: string;\n    price: number;\n    visibility: Visibility;\n}\n\nexport class ISelectContent {\n    contentId: string[];\n}\n\nexport interface ISettingPoint {\n    enabled: PointEnabled;\n    oneTo: number;\n}\n\nexport interface ITransaction {\n    balance: number;\n    contentId: string[];\n    userId: string;\n    paymentMethod: PaymentMethod;\n}\n\nexport interface ContentResponse {\n    page: number;\n    count: number;\n    total: number;\n    payload: IContent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IElasticConfig.html":{"url":"interfaces/IElasticConfig.html","title":"interface - IElasticConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IElasticConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/interfaces/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            node\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAppConfig {\n    nodeEnv: string;\n    name: string;\n    apiPrefix: string;\n    prefix: string;\n    version: string;\n    port: number;\n}\n\nexport interface IJWTConfig {\n    jwtSecret: string;\n    accessTokenExpiration: string;\n}\n\nexport interface IRedisConfig {\n    host: string;\n    port: string;\n    ttl: number;\n}\nexport interface IElasticConfig {\n    node: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJWTConfig.html":{"url":"interfaces/IJWTConfig.html","title":"interface - IJWTConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJWTConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/interfaces/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessTokenExpiration\n                                        \n                                \n                                \n                                        \n                                            jwtSecret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessTokenExpiration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessTokenExpiration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAppConfig {\n    nodeEnv: string;\n    name: string;\n    apiPrefix: string;\n    prefix: string;\n    version: string;\n    port: number;\n}\n\nexport interface IJWTConfig {\n    jwtSecret: string;\n    accessTokenExpiration: string;\n}\n\nexport interface IRedisConfig {\n    host: string;\n    port: string;\n    ttl: number;\n}\nexport interface IElasticConfig {\n    node: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMember.html":{"url":"interfaces/IMember.html","title":"interface - IMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            point\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        point\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        point:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './member.enum';\n\nexport interface IMember {\n    id: string;\n    username: string;\n    password: string;\n    displayName: string;\n    point?: number;\n    role: Role;\n}\nexport interface MemberResponse {\n    id: string;\n    username: string;\n    displayName: string;\n    point?: number;\n    role: Role;\n}\n\nexport interface AccessTokenResponse {\n    accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRedisConfig.html":{"url":"interfaces/IRedisConfig.html","title":"interface - IRedisConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRedisConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/interfaces/config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            host\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                                \n                                        \n                                            ttl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ttl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ttl:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAppConfig {\n    nodeEnv: string;\n    name: string;\n    apiPrefix: string;\n    prefix: string;\n    version: string;\n    port: number;\n}\n\nexport interface IJWTConfig {\n    jwtSecret: string;\n    accessTokenExpiration: string;\n}\n\nexport interface IRedisConfig {\n    host: string;\n    port: string;\n    ttl: number;\n}\nexport interface IElasticConfig {\n    node: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISelectContent.html":{"url":"classes/ISelectContent.html","title":"class - ISelectContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISelectContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.interface.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from './book.enum';\n\nexport interface IContent {\n    id?: string;\n    name: string;\n    description: string;\n    author: string;\n    price: number;\n    visibility: Visibility;\n}\n\nexport class ISelectContent {\n    contentId: string[];\n}\n\nexport interface ISettingPoint {\n    enabled: PointEnabled;\n    oneTo: number;\n}\n\nexport interface ITransaction {\n    balance: number;\n    contentId: string[];\n    userId: string;\n    paymentMethod: PaymentMethod;\n}\n\nexport interface ContentResponse {\n    page: number;\n    count: number;\n    total: number;\n    payload: IContent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISettingPoint.html":{"url":"interfaces/ISettingPoint.html","title":"interface - ISettingPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISettingPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            enabled\n                                        \n                                \n                                \n                                        \n                                            oneTo\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enabled:         PointEnabled\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PointEnabled\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oneTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oneTo:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from './book.enum';\n\nexport interface IContent {\n    id?: string;\n    name: string;\n    description: string;\n    author: string;\n    price: number;\n    visibility: Visibility;\n}\n\nexport class ISelectContent {\n    contentId: string[];\n}\n\nexport interface ISettingPoint {\n    enabled: PointEnabled;\n    oneTo: number;\n}\n\nexport interface ITransaction {\n    balance: number;\n    contentId: string[];\n    userId: string;\n    paymentMethod: PaymentMethod;\n}\n\nexport interface ContentResponse {\n    page: number;\n    count: number;\n    total: number;\n    payload: IContent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITokenPayload.html":{"url":"interfaces/ITokenPayload.html","title":"interface - ITokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commons/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from '@services/member';\n\nexport interface ITokenPayload {\n    id: string;\n    role: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransaction.html":{"url":"interfaces/ITransaction.html","title":"interface - ITransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            contentId\n                                        \n                                \n                                \n                                        \n                                            paymentMethod\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentId:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paymentMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paymentMethod:         PaymentMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from './book.enum';\n\nexport interface IContent {\n    id?: string;\n    name: string;\n    description: string;\n    author: string;\n    price: number;\n    visibility: Visibility;\n}\n\nexport class ISelectContent {\n    contentId: string[];\n}\n\nexport interface ISettingPoint {\n    enabled: PointEnabled;\n    oneTo: number;\n}\n\nexport interface ITransaction {\n    balance: number;\n    contentId: string[];\n    userId: string;\n    paymentMethod: PaymentMethod;\n}\n\nexport interface ContentResponse {\n    page: number;\n    count: number;\n    total: number;\n    payload: IContent[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'password', example: '12345678', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'username', example: 'example', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.dto.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { Role } from './member.enum';\n\nexport class RegisterDto {\n    @ApiProperty({\n        name: 'username',\n        example: 'testing',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    username: string;\n\n    @ApiProperty({\n        name: 'displayName',\n        example: 'testing testing',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    displayName: string;\n\n    @ApiProperty({\n        name: 'password',\n        example: '12345678',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n\n    @ApiProperty({\n        name: 'role',\n        example: Role.MEMBER,\n        required: true,\n        enum: Role,\n    })\n    @IsNotEmpty()\n    @IsEnum(Role)\n    role: Role;\n}\n\nexport class LoginDto {\n    @ApiProperty({\n        name: 'username',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    username: string;\n\n    @ApiProperty({\n        name: 'password',\n        example: '12345678',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MemberController.html":{"url":"controllers/MemberController.html","title":"controller - MemberController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MemberController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/controllers/member.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getLibrary\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                me\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLibrary\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLibrary(authorizer: Authorizer, query: GetContentQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiQuery({name: 'search', type: String, required: false})@ApiQuery({name: 'page', type: Number, example: 1, required: true})@ApiQuery({name: 'size', type: Number, example: 5, required: true})@BearerAuth()@Get('library')\n                \n            \n\n            \n                \n                    Defined in src/controllers/member.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n                                    \n                                                GetContentQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/controllers/member.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(authorizer: Authorizer)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')@BearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/controllers/member.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authorizer\n                                    \n                                                Authorizer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(dto: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/controllers/member.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Auth, Authorizer, BearerAuth } from '../commons/decorators';\nimport { Body, Controller, Get, Post, Query } from '@nestjs/common';\nimport { ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { BookService, ContentResponse, GetContentQuery } from '@services/book';\nimport {\n    AccessTokenResponse,\n    LoginDto,\n    MemberResponse,\n    MemberService,\n    RegisterDto,\n} from '@services/member';\n\n@Controller({ path: 'members' })\n@ApiTags('Member')\nexport class MemberController {\n    constructor(private member: MemberService, private book: BookService) {}\n\n    @Post('login')\n    async login(@Body() dto: LoginDto): Promise {\n        return this.member.login(dto);\n    }\n\n    @Post('register')\n    async register(@Body() dto: RegisterDto): Promise {\n        return this.member.register(dto);\n    }\n\n    @Get('')\n    @BearerAuth()\n    async me(@Auth() authorizer: Authorizer): Promise {\n        authorizer.requestAccessForMember();\n        return this.member.me(authorizer.user.id);\n    }\n\n    @ApiQuery({ name: 'search', type: String, required: false })\n    @ApiQuery({ name: 'page', type: Number, example: 1, required: true })\n    @ApiQuery({ name: 'size', type: Number, example: 5, required: true })\n    @BearerAuth()\n    @Get('library')\n    async getLibrary(\n        @Auth() authorizer: Authorizer,\n        @Query() query: GetContentQuery,\n    ): Promise {\n        authorizer.requestAccessForMember();\n        return this.book.getLibrary(authorizer.user.id, query);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MemberModule.html":{"url":"modules/MemberModule.html","title":"module - MemberModule","body":"\n                   \n\n\n\n\n    Modules\n    MemberModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MemberModule\n\n\n\ncluster_MemberModule_imports\n\n\n\ncluster_MemberModule_exports\n\n\n\n\nBookElasticModule\n\nBookElasticModule\n\n\n\nMemberModule\n\nMemberModule\n\nMemberModule -->\n\nBookElasticModule->MemberModule\n\n\n\n\n\nBookJWTTokenModule\n\nBookJWTTokenModule\n\nMemberModule -->\n\nBookJWTTokenModule->MemberModule\n\n\n\n\n\nBookRedisModule\n\nBookRedisModule\n\nMemberModule -->\n\nBookRedisModule->MemberModule\n\n\n\n\n\nMemberService \n\nMemberService \n\nMemberService  -->\n\nMemberModule->MemberService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/member/member.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BookElasticModule\n                        \n                        \n                            BookJWTTokenModule\n                        \n                        \n                            BookRedisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MemberService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BookElasticModule, BookJWTTokenModule, BookRedisModule } from '../../commons/modules';\nimport { Module } from '@nestjs/common';\nimport { MemberService } from './member.abstract';\nimport { MemberServiceImpl } from './member.implement';\n\n@Module({\n    imports: [BookElasticModule, BookRedisModule, BookJWTTokenModule],\n    providers: [\n        {\n            provide: MemberService,\n            useClass: MemberServiceImpl,\n        },\n    ],\n    exports: [MemberService],\n})\nexport class MemberModule {}\n\nexport { MemberService };\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MemberResponse.html":{"url":"interfaces/MemberResponse.html","title":"interface - MemberResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MemberResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            point\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        point\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        point:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './member.enum';\n\nexport interface IMember {\n    id: string;\n    username: string;\n    password: string;\n    displayName: string;\n    point?: number;\n    role: Role;\n}\nexport interface MemberResponse {\n    id: string;\n    username: string;\n    displayName: string;\n    point?: number;\n    role: Role;\n}\n\nexport interface AccessTokenResponse {\n    accessToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MemberService.html":{"url":"classes/MemberService.html","title":"class - MemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.abstract.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                login\n                            \n                            \n                                    Abstract\n                                me\n                            \n                            \n                                    Abstract\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.abstract.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.abstract.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(dto: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.abstract.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LoginDto, RegisterDto } from './member.dto';\nimport { AccessTokenResponse, MemberResponse } from './member.interface';\n\nexport abstract class MemberService {\n    abstract register(dto: RegisterDto): Promise;\n    abstract login(dto: LoginDto): Promise;\n    abstract me(userId: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemberServiceImpl.html":{"url":"injectables/MemberServiceImpl.html","title":"injectable - MemberServiceImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemberServiceImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.implement.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _generateToken\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                me\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elasticsearch: ElasticsearchService, jwt: JwtService, config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/member/member.implement.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elasticsearch\n                                                  \n                                                        \n                                                                    ElasticsearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwt\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        _generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    _generateToken(payload: IMember)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.implement.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IMember\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AccessTokenResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(undefined: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.implement.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        me\n                        \n                    \n                \n            \n            \n                \n                    \n                    me(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.implement.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(undefined: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/member/member.implement.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MemberService.name)\n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.implement.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BookException } from '../../commons/exceptions';\nimport { ConfigService } from '@nestjs/config';\nimport { ElasticsearchService } from '@nestjs/elasticsearch';\nimport { HttpStatus, Injectable, Logger } from '@nestjs/common';\nimport { IJWTConfig } from '../../commons/interfaces';\nimport { AccessTokenResponse, IMember, MemberResponse } from './member.interface';\nimport { IndexPath } from '../../commons/enums';\nimport { JwtService } from '@nestjs/jwt';\nimport { LoginDto, RegisterDto } from './member.dto';\nimport { MemberService } from './member.abstract';\nimport { v4 } from 'uuid';\nimport * as bcrypt from 'bcrypt';\n\nconst saltOrRounds = 10;\n\n@Injectable()\nexport class MemberServiceImpl implements MemberService {\n    private readonly logger = new Logger(MemberService.name);\n\n    constructor(\n        private readonly elasticsearch: ElasticsearchService,\n        private readonly jwt: JwtService,\n        private readonly config: ConfigService,\n    ) {}\n\n    private _generateToken(payload: IMember): AccessTokenResponse {\n        const { jwtSecret, accessTokenExpiration } = this.config.get('jwt');\n\n        const token = this.jwt.sign(\n            { id: payload.id, role: payload.role },\n            { secret: jwtSecret, expiresIn: accessTokenExpiration },\n        );\n\n        return { accessToken: token };\n    }\n\n    async register({\n        username,\n        password,\n        role,\n        displayName,\n    }: RegisterDto): Promise {\n        const hashPassword = await bcrypt.hash(password, saltOrRounds);\n        const uuid = v4();\n        const prepare = {\n            role,\n            username,\n            displayName,\n            id: uuid,\n            point: 0,\n            password: hashPassword,\n        };\n\n        try {\n            const {\n                hits: { hits: memberHits },\n            } = await this.elasticsearch.search({\n                index: IndexPath.Member,\n                query: { bool: { must: [{ match: { username } }] } },\n            });\n\n            const [payload] = memberHits;\n\n            if (payload)\n                throw new BookException(\n                    HttpStatus.BAD_REQUEST,\n                    'Username is existing. Please try again.',\n                );\n\n            await this.elasticsearch.index({\n                index: IndexPath.Member,\n                id: `${uuid}`,\n                document: prepare,\n            });\n        } catch (error) {\n            this.logger.error(JSON.stringify(error));\n            if (error.statusCode !== 404) throw error;\n\n            await this.elasticsearch.index({\n                index: IndexPath.Member,\n                id: `${uuid}`,\n                document: prepare,\n            });\n        }\n\n        return this._generateToken(prepare);\n    }\n\n    async login({ username, password }: LoginDto): Promise {\n        try {\n            const {\n                hits: { hits: memberHits },\n            } = await this.elasticsearch.search({\n                index: IndexPath.Member,\n                query: { bool: { must: [{ match: { username } }] } },\n            });\n\n            const [payload] = memberHits;\n\n            if (!payload) throw new BookException(HttpStatus.NOT_FOUND, 'Username not found');\n\n            const compare = bcrypt.compare(password, payload._source.password);\n\n            if (!compare)\n                throw new BookException(HttpStatus.BAD_REQUEST, 'Password does not match');\n\n            return this._generateToken(payload._source);\n        } catch (error) {\n            this.logger.error(JSON.stringify(error));\n\n            if (error.statusCode !== 404) throw error;\n        }\n    }\n\n    async me(userId: string): Promise {\n        try {\n            const {\n                hits: { hits: memberHits },\n            } = await this.elasticsearch.search({\n                index: IndexPath.Member,\n                query: { bool: { must: [{ match: { id: userId } }] } },\n            });\n\n            const [{ _source: payload }] = memberHits;\n\n            if (!payload) throw new BookException(HttpStatus.NOT_FOUND, 'User not found');\n\n            return {\n                id: payload.id,\n                username: payload.username,\n                displayName: payload.displayName,\n                point: payload.point,\n                role: payload.role,\n            };\n        } catch (error) {\n            this.logger.error(JSON.stringify(error));\n\n            if (error.statusCode !== 404) throw error;\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Path.html":{"url":"classes/Path.html","title":"class - Path","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Path\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/configs/path.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                App\n                            \n                            \n                                    Static\n                                Elasticsearch\n                            \n                            \n                                    Static\n                                RedisStore\n                            \n                            \n                                    Static\n                                Token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        App\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'app'\n                    \n                \n                    \n                        \n                                Defined in src/configs/path.config.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Elasticsearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'elasticsearch'\n                    \n                \n                    \n                        \n                                Defined in src/configs/path.config.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        RedisStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'redis-store'\n                    \n                \n                    \n                        \n                                Defined in src/configs/path.config.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jwt'\n                    \n                \n                    \n                        \n                                Defined in src/configs/path.config.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Path {\n    static App = 'app';\n    static Elasticsearch = 'elasticsearch';\n    static Token = 'jwt';\n    static RedisStore = 'redis-store';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/member/member.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                displayName\n                            \n                            \n                                password\n                            \n                            \n                                role\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'displayName', example: 'testing testing', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'password', example: '12345678', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'role', example: undefined, required: true, enum: Role})@IsNotEmpty()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'username', example: 'testing', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/member/member.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { Role } from './member.enum';\n\nexport class RegisterDto {\n    @ApiProperty({\n        name: 'username',\n        example: 'testing',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    username: string;\n\n    @ApiProperty({\n        name: 'displayName',\n        example: 'testing testing',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    displayName: string;\n\n    @ApiProperty({\n        name: 'password',\n        example: '12345678',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n\n    @ApiProperty({\n        name: 'role',\n        example: Role.MEMBER,\n        required: true,\n        enum: Role,\n    })\n    @IsNotEmpty()\n    @IsEnum(Role)\n    role: Role;\n}\n\nexport class LoginDto {\n    @ApiProperty({\n        name: 'username',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    username: string;\n\n    @ApiProperty({\n        name: 'password',\n        example: '12345678',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectContentDto.html":{"url":"classes/SelectContentDto.html","title":"class - SelectContentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectContentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'contentId', example: undefined, required: true, type: Array})@IsArray()@ArrayNotEmpty()@IsUUID('all', {each: true})@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from '@services/book';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n    ArrayMinSize,\n    ArrayNotEmpty,\n    IsArray,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsNumberString,\n    IsOptional,\n    IsString,\n    IsUUID,\n    Min,\n} from 'class-validator';\n\nexport class ContentDto {\n    @ApiProperty({\n        name: 'name',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({\n        name: 'description',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({\n        name: 'author',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    author: string;\n\n    @ApiProperty({\n        name: 'price',\n        example: 100,\n        required: true,\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    price: number;\n\n    @ApiProperty({\n        name: 'visibility',\n        example: 'example',\n        required: true,\n        enum: Visibility,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(Visibility)\n    visibility: Visibility;\n}\n\nexport class SelectContentDto {\n    @ApiProperty({\n        name: 'contentId',\n        example: ['example'],\n        required: true,\n        type: Array,\n    })\n    @IsArray()\n    @ArrayNotEmpty()\n    @IsUUID('all', { each: true })\n    @ArrayMinSize(1)\n    contentId: string[];\n}\n\nexport class CheckoutDto {\n    @ApiProperty({\n        name: 'method',\n        example: 'example',\n        required: true,\n        enum: PaymentMethod,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PaymentMethod)\n    method: PaymentMethod;\n}\n\nexport class SettingPointDto {\n    @ApiProperty({\n        name: 'enabled',\n        example: 'active',\n        required: true,\n        enum: PointEnabled,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PointEnabled)\n    enabled: PointEnabled;\n\n    @ApiProperty({\n        name: 'oneTo',\n        example: 1,\n        required: true,\n        type: Number,\n    })\n    @IsNumber()\n    @Min(1)\n    @IsNotEmpty()\n    oneTo: number;\n}\n\nexport class GetContentQuery {\n    @ApiProperty({\n        name: 'search',\n        example: 'example',\n        type: String,\n    })\n    @IsString()\n    @IsOptional()\n    search?: string;\n\n    @ApiProperty({\n        name: 'size',\n        example: 5,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    size: number;\n\n    @ApiProperty({\n        name: 'page',\n        example: 1,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    page: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingPointDto.html":{"url":"classes/SettingPointDto.html","title":"class - SettingPointDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingPointDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/book/book.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                enabled\n                            \n                            \n                                oneTo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        enabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PointEnabled\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'enabled', example: 'active', required: true, enum: PointEnabled})@IsString()@IsNotEmpty()@IsEnum(PointEnabled)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oneTo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'oneTo', example: 1, required: true, type: Number})@IsNumber()@Min(1)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/book/book.dto.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PaymentMethod, PointEnabled, Visibility } from '@services/book';\nimport { ApiProperty } from '@nestjs/swagger';\nimport {\n    ArrayMinSize,\n    ArrayNotEmpty,\n    IsArray,\n    IsEnum,\n    IsNotEmpty,\n    IsNumber,\n    IsNumberString,\n    IsOptional,\n    IsString,\n    IsUUID,\n    Min,\n} from 'class-validator';\n\nexport class ContentDto {\n    @ApiProperty({\n        name: 'name',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @ApiProperty({\n        name: 'description',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty({\n        name: 'author',\n        example: 'example',\n        required: true,\n    })\n    @IsString()\n    @IsNotEmpty()\n    author: string;\n\n    @ApiProperty({\n        name: 'price',\n        example: 100,\n        required: true,\n    })\n    @IsNumber()\n    @IsNotEmpty()\n    price: number;\n\n    @ApiProperty({\n        name: 'visibility',\n        example: 'example',\n        required: true,\n        enum: Visibility,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(Visibility)\n    visibility: Visibility;\n}\n\nexport class SelectContentDto {\n    @ApiProperty({\n        name: 'contentId',\n        example: ['example'],\n        required: true,\n        type: Array,\n    })\n    @IsArray()\n    @ArrayNotEmpty()\n    @IsUUID('all', { each: true })\n    @ArrayMinSize(1)\n    contentId: string[];\n}\n\nexport class CheckoutDto {\n    @ApiProperty({\n        name: 'method',\n        example: 'example',\n        required: true,\n        enum: PaymentMethod,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PaymentMethod)\n    method: PaymentMethod;\n}\n\nexport class SettingPointDto {\n    @ApiProperty({\n        name: 'enabled',\n        example: 'active',\n        required: true,\n        enum: PointEnabled,\n    })\n    @IsString()\n    @IsNotEmpty()\n    @IsEnum(PointEnabled)\n    enabled: PointEnabled;\n\n    @ApiProperty({\n        name: 'oneTo',\n        example: 1,\n        required: true,\n        type: Number,\n    })\n    @IsNumber()\n    @Min(1)\n    @IsNotEmpty()\n    oneTo: number;\n}\n\nexport class GetContentQuery {\n    @ApiProperty({\n        name: 'search',\n        example: 'example',\n        type: String,\n    })\n    @IsString()\n    @IsOptional()\n    search?: string;\n\n    @ApiProperty({\n        name: 'size',\n        example: 5,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    size: number;\n\n    @ApiProperty({\n        name: 'page',\n        example: 1,\n        type: Number,\n    })\n    @IsNumberString()\n    @IsNotEmpty()\n    page: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/commons/decorators/auth.decorator.ts\n            \n            function\n            BearerAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/decorators/user.decorator.ts\n            \n            class\n            Authorizer\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/commons/decorators/user.decorator.ts\n            \n            variable\n            Auth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/exceptions/exception.filter.ts\n            \n            class\n            BookExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commons/exceptions/exception.ts\n            \n            class\n            BookException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commons/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/commons/interfaces/auth.interface.ts\n            \n            interface\n            ITokenPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commons/interfaces/config.interface.ts\n            \n            interface\n            IAppConfig\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/commons/interfaces/config.interface.ts\n            \n            interface\n            IElasticConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/commons/interfaces/config.interface.ts\n            \n            interface\n            IJWTConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/commons/interfaces/config.interface.ts\n            \n            interface\n            IRedisConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/commons/modules/factory.ts\n            \n            variable\n            getElasticModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/modules/factory.ts\n            \n            variable\n            getJWTModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/commons/modules/factory.ts\n            \n            variable\n            getRedisModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/elastic.config.ts\n            \n            variable\n            elasticConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/configs/path.config.ts\n            \n            class\n            Path\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/configs/redis.config.ts\n            \n            variable\n            redisConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/controllers/book.controller.ts\n            \n            controller\n            BookController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/controllers/member.controller.ts\n            \n            controller\n            MemberController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/book/book.abstract.ts\n            \n            class\n            BookService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/book/book.dto.ts\n            \n            class\n            CheckoutDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/book/book.dto.ts\n            \n            class\n            ContentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/book/book.dto.ts\n            \n            class\n            GetContentQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/book/book.dto.ts\n            \n            class\n            SelectContentDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/book/book.dto.ts\n            \n            class\n            SettingPointDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/book/book.implement.ts\n            \n            injectable\n            BookServiceImpl\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/book/book.interface.ts\n            \n            class\n            ISelectContent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/book/book.interface.ts\n            \n            interface\n            ContentResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/book/book.interface.ts\n            \n            interface\n            IContent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/book/book.interface.ts\n            \n            interface\n            ISettingPoint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/book/book.interface.ts\n            \n            interface\n            ITransaction\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/member/member.abstract.ts\n            \n            class\n            MemberService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/member/member.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/member/member.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/member/member.implement.ts\n            \n            injectable\n            MemberServiceImpl\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/member/member.implement.ts\n            \n            variable\n            saltOrRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/member/member.interface.ts\n            \n            interface\n            AccessTokenResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/member/member.interface.ts\n            \n            interface\n            IMember\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/member/member.interface.ts\n            \n            interface\n            MemberResponse\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @elastic/elasticsearch : ^8.5.0\n        \n            @fastify/static : ^6.5.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/elasticsearch : ^9.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-fastify : ^9.1.6\n        \n            @nestjs/swagger : ^6.1.3\n        \n            @types/lodash : ^4.14.188\n        \n            bcrypt : ^5.1.0\n        \n            cache-manager : ^5.1.3\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            lodash : ^4.17.21\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            uuid : ^9.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ContentType   (src/.../book.enum.ts)\n                        \n                        \n                            IndexPath   (src/.../elasticsearch.enum.ts)\n                        \n                        \n                            PaymentMethod   (src/.../book.enum.ts)\n                        \n                        \n                            PointEnabled   (src/.../book.enum.ts)\n                        \n                        \n                            Role   (src/.../member.enum.ts)\n                        \n                        \n                            Visibility   (src/.../book.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/book/book.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ContentType\n                    \n                \n                        \n                            \n                                 PRESENTATION\n                            \n                        \n                        \n                            \n                                Value : presentation\n                            \n                        \n                        \n                            \n                                 TEXT\n                            \n                        \n                        \n                            \n                                Value : text\n                            \n                        \n                        \n                            \n                                 VIDEO\n                            \n                        \n                        \n                            \n                                Value : video\n                            \n                        \n                        \n                            \n                                 AUDIO\n                            \n                        \n                        \n                            \n                                Value : audio\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 Credit\n                            \n                        \n                        \n                            \n                                Value : credit\n                            \n                        \n                        \n                            \n                                 Point\n                            \n                        \n                        \n                            \n                                Value : point\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        PointEnabled\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : inactive\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Visibility\n                    \n                \n                        \n                            \n                                 PUBLISH\n                            \n                        \n                        \n                            \n                                Value : publish\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n            \n        \n\n    src/commons/enums/elasticsearch.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        IndexPath\n                    \n                \n                        \n                            \n                                 Content\n                            \n                        \n                        \n                            \n                                Value : content\n                            \n                        \n                        \n                            \n                                 SettingPoint\n                            \n                        \n                        \n                            \n                                Value : setting-point\n                            \n                        \n                        \n                            \n                                 Member\n                            \n                        \n                        \n                            \n                                Value : member\n                            \n                        \n                        \n                            \n                                 Transaction\n                            \n                        \n                        \n                            \n                                Value : transaction\n                            \n                        \n            \n        \n\n    src/modules/member/member.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 MEMBER\n                            \n                        \n                        \n                            \n                                Value : member\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            BearerAuth   (src/.../auth.decorator.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commons/decorators/auth.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BearerAuth\n                        \n                    \n                \n            \n            \n                \nBearerAuth()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     MethodDecorator\n\n                    \n                \n            \n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 nuza555xx\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookElasticModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookJWTTokenModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BookRedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MemberModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_BookModule\n\n\n\ncluster_BookModule_imports\n\n\n\ncluster_BookModule_exports\n\n\n\ncluster_MemberModule\n\n\n\ncluster_MemberModule_exports\n\n\n\n\nBookConfigModule\n\nBookConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBookConfigModule->AppModule\n\n\n\n\n\nBookJWTTokenModule\n\nBookJWTTokenModule\n\n\n\nMemberModule\n\nMemberModule\n\nMemberModule -->\n\nBookJWTTokenModule->MemberModule\n\n\n\nAppModule -->\n\nBookJWTTokenModule->AppModule\n\n\n\n\n\nBookModule\n\nBookModule\n\nAppModule -->\n\nBookModule->AppModule\n\n\n\n\n\nBookService \n\nBookService \n\nBookService  -->\n\nBookModule->BookService \n\n\n\nAppModule -->\n\nMemberModule->AppModule\n\n\n\n\n\nMemberService \n\nMemberService \n\nMemberService  -->\n\nMemberModule->MemberService \n\n\n\n\n\nBookElasticModule\n\nBookElasticModule\n\nBookModule -->\n\nBookElasticModule->BookModule\n\n\n\nMemberModule -->\n\nBookElasticModule->MemberModule\n\n\n\n\n\nBookRedisModule\n\nBookRedisModule\n\nBookModule -->\n\nBookRedisModule->BookModule\n\n\n\nMemberModule -->\n\nBookRedisModule->MemberModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthRequest   (src/.../auth.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commons/guards/auth.guard.ts\n    \n    \n        \n            \n                \n                    \n                    AuthRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            Auth   (src/.../user.decorator.ts)\n                        \n                        \n                            elasticConfig   (src/.../elastic.config.ts)\n                        \n                        \n                            getElasticModuleOptions   (src/.../factory.ts)\n                        \n                        \n                            getJWTModuleOptions   (src/.../factory.ts)\n                        \n                        \n                            getRedisModuleOptions   (src/.../factory.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            redisConfig   (src/.../redis.config.ts)\n                        \n                        \n                            saltOrRounds   (src/.../member.implement.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/configs/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n    Path.App,\n    (): IAppConfig => ({\n        nodeEnv: process.env.NODE_ENV || 'development',\n        name: process.env.PROJECT_NAME,\n        apiPrefix: process.env.API_PREFIX || 'v1',\n        prefix: process.env.PREFIX || 'books',\n        version: process.env.VERSION,\n        port: Number(process.env.PORT) || 3000,\n    }),\n)\n                    \n                \n\n\n        \n    \n\n    src/commons/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Auth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(async (_: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.$user;\n\n    return new Authorizer(user);\n})\n                    \n                \n\n\n        \n    \n\n    src/configs/elastic.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        elasticConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n    Path.Elasticsearch,\n    (): IElasticConfig => ({\n        node: process.env.ELASTICSEARCH_NODE,\n    }),\n)\n                    \n                \n\n\n        \n    \n\n    src/commons/modules/factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getElasticModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService): ElasticsearchModuleOptions => ({\n    node: config.get(`${Path.Elasticsearch}.node`),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJWTModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService): JwtModuleOptions => ({\n    secret: config.get('jwt'),\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRedisModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: ConfigService): CacheModuleOptions => ({\n    store: redisStore,\n    host: config.get('host'),\n    port: config.get('port'),\n    ttl: Number(config.get('ttl')),\n})\n                    \n                \n\n\n        \n    \n\n    src/configs/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n    Path.Token,\n    (): IJWTConfig => ({\n        jwtSecret: process.env.PREFIX || 'books',\n        accessTokenExpiration: process.env.ACCESS_TOKEN_EXPIRATION || '1d',\n    }),\n)\n                    \n                \n\n\n        \n    \n\n    src/configs/redis.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        redisConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n    Path.RedisStore,\n    (): IRedisConfig => ({\n        host: process.env.STORAGE_REDIS_HOST || 'localhost',\n        port: process.env.STORAGE_REDIS_PORT || '6379',\n        ttl: Number(process.env.STORAGE_REDIS_TTL) || 3600,\n    }),\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/member/member.implement.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        saltOrRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
